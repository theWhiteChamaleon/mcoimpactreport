{"version":3,"file":"static/js/5.83093388.chunk.js","mappings":"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","sources":["pages/MCOImpactReport/MCOImpactReportPartRevTable.jsx","pages/MCOImpactReport/MCOImpactReportMBOMConnectionTable.jsx","pages/MCOImpactReport/dataHelpers.js","hooks/useMBOMImpactReport.js","hooks/useMBOMImpactReportDropableArea.js","pages/MCOImpactReport/DragAndDrop.jsx","pages/MCOImpactReport/MBOMImpactReport.jsx","pages/MCOImpactReport/MBOMImpactReportIndex.js"],"sourcesContent":["import React, { useMemo, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport './MCOTables.css'; // Assuming your CSS file is here\r\n\r\nconst MCOImpactReportPartRevTable = ({ columns, data }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n\r\n  // --- Column Resizing State and Logic ---\r\n  // Initialize column widths, could be default or from columns prop\r\n  const [columnWidths, setColumnWidths] = useState(() => {\r\n    const initialWidths = {};\r\n    // Safely access columns and use forEach only if columns is an array\r\n    if (Array.isArray(columns)) {\r\n      columns.forEach(col => {\r\n        // You might want a default width or pass it in via columns prop\r\n        initialWidths[col.accessorKey] = col.defaultWidth || 150; // Default width if not specified\r\n      });\r\n    }\r\n    return initialWidths;\r\n  });\r\n\r\n  const resizingColumnRef = useRef(null); // Stores the accessorKey of the column currently being resized\r\n  const startXRef = useRef(0); // Stores the initial mouse X position\r\n  const startWidthRef = useRef(0); // Stores the initial width of the column\r\n\r\n  const handleMouseDown = useCallback((e, accessorKey) => {\r\n    resizingColumnRef.current = accessorKey;\r\n    startXRef.current = e.clientX;\r\n    startWidthRef.current = columnWidths[accessorKey];\r\n\r\n    // Add global event listeners to handle drag and release anywhere on the document\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n  }, [columnWidths]);\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    if (resizingColumnRef.current === null) return;\r\n\r\n    const currentX = e.clientX;\r\n    const diff = currentX - startXRef.current;\r\n    const newWidth = Math.max(50, startWidthRef.current + diff); // Minimum width of 50px\r\n\r\n    setColumnWidths(prevWidths => ({\r\n      ...prevWidths,\r\n      [resizingColumnRef.current]: newWidth\r\n    }));\r\n  }, []); // Dependencies are not needed as refs are used\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    resizingColumnRef.current = null;\r\n    startXRef.current = 0;\r\n    startWidthRef.current = 0;\r\n\r\n    // Remove global event listeners\r\n    document.removeEventListener('mousemove', handleMouseMove);\r\n    document.removeEventListener('mouseup', handleMouseUp);\r\n  }, [handleMouseMove]); // Dependency for cleanup\r\n\r\n  // --- End Column Resizing State and Logic ---\r\n\r\n\r\n  // Filtered data\r\n  const filteredData = useMemo(() => {\r\n    // Ensure data is an array before filtering\r\n    if (!Array.isArray(data)) {\r\n      return [];\r\n    }\r\n    return data.filter((row) =>\r\n      // Ensure columns is an array before iterating\r\n      Array.isArray(columns) && columns.some((col) =>\r\n        String(row[col.accessorKey] || \"\") // Use empty string if accessorKey is undefined\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchText, data, columns]);\r\n\r\n  // Paginated data\r\n  const paginatedData = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    // Ensure filteredData is an array before slicing\r\n    if (!Array.isArray(filteredData)) {\r\n      return [];\r\n    }\r\n    return filteredData.slice(startIndex, startIndex + itemsPerPage);\r\n  }, [filteredData, currentPage]);\r\n\r\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\r\n\r\n  const handleExport = () => {\r\n    // Ensure filteredData is an array before exporting\r\n    if (!Array.isArray(filteredData) || filteredData.length === 0) {\r\n      console.warn(\"No data to export.\");\r\n      return;\r\n    }\r\n    const worksheet = XLSX.utils.json_to_sheet(filteredData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\",\r\n    });\r\n\r\n    const blob = new Blob([excelBuffer], {\r\n      type: \"application/octet-stream\",\r\n    });\r\n    saveAs(blob, \"exported-data.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 mt-3\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        {/* Search Input and Export Button can go here */}\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control w-25\"\r\n          placeholder=\"Search...\"\r\n          value={searchText}\r\n          onChange={(e) => setSearchText(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\" onClick={handleExport}>\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table custom-table table-hover\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              {/* Add a check for columns being an array before mapping */}\r\n              {Array.isArray(columns) && columns.map((col) => (\r\n                <th\r\n                  key={col.accessorKey}\r\n                  style={{ width: columnWidths[col.accessorKey] + 'px' }}\r\n                >\r\n                  {col.header}\r\n                  <div\r\n                    className=\"resizer\"\r\n                    onMouseDown={(e) => handleMouseDown(e, col.accessorKey)}\r\n                  />\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* Add a check for paginatedData being an array before checking length and mapping */}\r\n            {Array.isArray(paginatedData) && paginatedData.length > 0 ? (\r\n              paginatedData.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  {/* Add a check for columns being an array before mapping */}\r\n                  {Array.isArray(columns) && columns.map((col) => (\r\n                    <td\r\n                      key={col.accessorKey}\r\n                      style={{ width: columnWidths[col.accessorKey] + 'px' }}\r\n                    >\r\n                      {row[col.accessorKey]}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                {/* Ensure columns is an array before trying to get its length */}\r\n                <td colSpan={Array.isArray(columns) ? columns.length : 1} className=\"text-center\">\r\n                  No data found.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n        <p className=\"mb-0\">\r\n          Showing {(currentPage - 1) * itemsPerPage + 1} to{\" \"}\r\n          {Math.min(currentPage * itemsPerPage, filteredData.length)} of{\" \"}\r\n          {filteredData.length} entries\r\n        </p>\r\n\r\n        <div>\r\n          <button\r\n            className=\"btn btn-outline-primary mx-1\"\r\n            disabled={currentPage === 1}\r\n            onClick={() => setCurrentPage((prev) => prev - 1)}\r\n          >\r\n            Prev\r\n          </button>\r\n          <span>{currentPage}</span>\r\n          <button\r\n            className=\"btn btn-outline-primary mx-1\"\r\n            disabled={currentPage === totalPages}\r\n            onClick={() => setCurrentPage((prev) => prev + 1)}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCOImpactReportPartRevTable;","import React, { useMemo, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport './MCOTables.css'; // Assuming your CSS file is here\r\n\r\nconst MCOImpactReportMBOMConnectionTable = ({ columns, data }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n\r\n  // --- Column Resizing State and Logic ---\r\n  // Initialize column widths, could be default or from columns prop\r\n  const [columnWidths, setColumnWidths] = useState(() => {\r\n    const initialWidths = {};\r\n    // FIX: Check if columns is an array before calling forEach\r\n    if (Array.isArray(columns)) {\r\n      columns.forEach(col => {\r\n        // You might want a default width or pass it in via columns prop\r\n        initialWidths[col.accessorKey] = col.defaultWidth || 150; // Default width if not specified\r\n      });\r\n    }\r\n    return initialWidths;\r\n  });\r\n\r\n  const resizingColumnRef = useRef(null); // Stores the accessorKey of the column currently being resized\r\n  const startXRef = useRef(0); // Stores the initial mouse X position\r\n  const startWidthRef = useRef(0); // Stores the initial width of the column\r\n\r\n  const handleMouseDown = useCallback((e, accessorKey) => {\r\n    // Prevent text selection during drag\r\n    e.preventDefault();\r\n    resizingColumnRef.current = accessorKey;\r\n    startXRef.current = e.clientX;\r\n    startWidthRef.current = columnWidths[accessorKey];\r\n\r\n    // Add global event listeners to handle drag and release anywhere on the document\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n  }, [columnWidths]);\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    if (resizingColumnRef.current === null) return;\r\n\r\n    const currentX = e.clientX;\r\n    const diff = currentX - startXRef.current;\r\n    const newWidth = Math.max(50, startWidthRef.current + diff); // Minimum width of 50px\r\n\r\n    setColumnWidths(prevWidths => ({\r\n      ...prevWidths,\r\n      [resizingColumnRef.current]: newWidth\r\n    }));\r\n  }, []); // Dependencies are not needed as refs are used\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    resizingColumnRef.current = null;\r\n    startXRef.current = 0;\r\n    startWidthRef.current = 0;\r\n\r\n    // Remove global event listeners\r\n    document.removeEventListener('mousemove', handleMouseMove);\r\n    document.removeEventListener('mouseup', handleMouseUp);\r\n  }, [handleMouseMove]); // Dependency for cleanup\r\n\r\n  // --- End Column Resizing State and Logic ---\r\n\r\n  // Filtered data\r\n  const filteredData = useMemo(() => {\r\n    // Ensure data is an array before filtering\r\n    if (!Array.isArray(data)) {\r\n      return [];\r\n    }\r\n    return data.filter((row) =>\r\n      // Ensure columns is an array before iterating with .some\r\n      Array.isArray(columns) && columns.some((col) =>\r\n        String(row[col.accessorKey] || \"\") // Use empty string if row[col.accessorKey] is undefined\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchText, data, columns]);\r\n\r\n  // Paginated data\r\n  const paginatedData = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    // Ensure filteredData is an array before slicing\r\n    if (!Array.isArray(filteredData)) {\r\n      return [];\r\n    }\r\n    return filteredData.slice(startIndex, startIndex + itemsPerPage);\r\n  }, [filteredData, currentPage]);\r\n\r\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\r\n\r\n  // Added handleExport function, assuming you might need it for this table too\r\n  const handleExport = () => {\r\n    // Ensure filteredData is an array before exporting\r\n    if (!Array.isArray(filteredData) || filteredData.length === 0) {\r\n      console.warn(\"No data to export.\");\r\n      return;\r\n    }\r\n    const worksheet = XLSX.utils.json_to_sheet(filteredData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\",\r\n    });\r\n\r\n    const blob = new Blob([excelBuffer], {\r\n      type: \"application/octet-stream\",\r\n    });\r\n    saveAs(blob, \"exported-data.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 mt-3\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        {/* Search Input and Export Button can go here */}\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control w-25\"\r\n          placeholder=\"Search...\"\r\n          value={searchText}\r\n          onChange={(e) => setSearchText(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\" onClick={handleExport}>\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table custom-table table-hover\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              {/* Add a check for columns being an array before mapping */}\r\n              {Array.isArray(columns) && columns.map((col) => (\r\n                <th\r\n                  key={col.accessorKey}\r\n                  style={{ width: columnWidths[col.accessorKey] + 'px' }}\r\n                >\r\n                  {col.header}\r\n                  <div\r\n                    className=\"resizer\"\r\n                    onMouseDown={(e) => handleMouseDown(e, col.accessorKey)}\r\n                  />\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* Add a check for paginatedData being an array before checking length and mapping */}\r\n            {Array.isArray(paginatedData) && paginatedData.length > 0 ? (\r\n              paginatedData.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  {/* Add a check for columns being an array before mapping */}\r\n                  {Array.isArray(columns) && columns.map((col) => (\r\n                    <td\r\n                      key={col.accessorKey}\r\n                      style={{ width: columnWidths[col.accessorKey] + 'px' }}\r\n                    >\r\n                      {row[col.accessorKey]}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                {/* Ensure columns is an array before trying to get its length */}\r\n                <td colSpan={Array.isArray(columns) ? columns.length : 1} className=\"text-center\">\r\n                  No data found.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n        <p className=\"mb-0\">\r\n          Showing {(currentPage - 1) * itemsPerPage + 1} to{\" \"}\r\n          {Math.min(currentPage * itemsPerPage, filteredData.length)} of{\" \"}\r\n          {filteredData.length} entries\r\n        </p>\r\n\r\n        <div>\r\n          <button\r\n            className=\"btn btn-outline-primary mx-1\"\r\n            disabled={currentPage === 1}\r\n            onClick={() => setCurrentPage((prev) => prev - 1)}\r\n          >\r\n            Prev\r\n          </button>\r\n          <span>{currentPage}</span>\r\n          <button\r\n            className=\"btn btn-outline-primary mx-1\"\r\n            disabled={currentPage === totalPages}\r\n            onClick={() => setCurrentPage((prev) => prev + 1)}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCOImpactReportMBOMConnectionTable;","// pages/revisionFloat/dataHelpers.js\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nimport { AiOutlineClose } from \"react-icons/ai\"; // Ant Design Icons (React Icons)\r\n\r\nexport const PlantRenderer = ({\r\n  plants = [],\r\n  itemId,\r\n  isRemoveMode,\r\n  handleRemovePlant,\r\n}) => {\r\n  console.log(\"PlantRenderer received plants:\", plants); // Debugging\r\n  if (!plants?.length) return \"N/A\";\r\n\r\n  return (\r\n    <>\r\n      {plants.map((plant) => (\r\n        <span\r\n          key={plant.PlantID}\r\n          style={{\r\n            marginRight: \"8px\",\r\n            display: \"inline-flex\",\r\n            alignItems: \"center\",\r\n            color: plant.color || \"black\", // Apply red or green based on color property\r\n            fontWeight: \"bold\", // Optional: Make it more visible\r\n          }}\r\n        >\r\n          {plant.PlantName}\r\n          {isRemoveMode && plant.PlantERPStatus === \"Pending\" && (\r\n            <AiOutlineClose\r\n              size={16}\r\n              style={{ cursor: \"pointer\", color: \"red\", marginLeft: \"4px\" }}\r\n              onClick={() => handleRemovePlant(itemId, plant.PlantID)}\r\n            />\r\n          )}\r\n        </span>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getCardData = (droppedObjectData) => {\r\n  if (!droppedObjectData || !droppedObjectData.cardData) {\r\n    return null;\r\n  }\r\n\r\n  const item = droppedObjectData.cardData;\r\n  console.log(\"item --47--\",item);\r\n  let cardData = {\r\n    title: item.Name || \"N/A\",\r\n    type: item.Type || \"N/A\",\r\n    \"Maturity State\": item[\"Maturity State\"] || \"N/A\",\r\n    owner: item.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": item[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: item.Description || \"N/A\",\r\n    \"Dropped Revision\": item[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": item[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": item[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      item.imageURL ||\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/snresources/images/icons/large/I_VPMNavProduct108x144.png\", // You might want a placeholder image URL\r\n  };\r\n\r\n  if (item.Type !== \"Document\") {\r\n    cardData.EIN = item.EIN || \"N/A\";\r\n    cardData[\"CAD Format\"] = item[\"CAD Format\"] || \"N/A\";\r\n  }\r\n  return cardData;\r\n};\r\n\r\nexport const getTableData = (tableData, type, CAData) => {\r\n  console.log(\"cadata datahelpers\",CAData );\r\n  \r\n  if (!tableData) return [];\r\n\r\n  return tableData.map((data) => {\r\n    if (type === \"Route\") {\r\n      return {\r\n        ItemName: data?.ItemTitle || \"N/A\",\r\n        ItemRev: data?.ItemRev || \"N/A\",\r\n        ItemType: data?.ItemType || \"N/A\",\r\n        ItemId: data?.ItemId || \"N/A\", \r\n        ItemSeq: data?.ItemSeq || \"N/A\",\r\n        ItemMakeBuy: data?.ItemMBOM || \"N/A\",\r\n        ItemNextSeqMCO: data?.ItemNextSeqMCO || \"N/A\",\r\n        ItemPrevSeqMCO: data?.ItemPrevSeqMCO || \"N/A\",\r\n      };\r\n    } \r\n  });\r\n};\r\n\r\nexport const getMBOMConnTableData = (tableData, type, CAData) => {\r\n  console.log(\"cadata datahelpers\",CAData );\r\n  \r\n  if (!tableData) return [];\r\n\r\n  return tableData.map((data) => {\r\n    if (type === \"Route\") {\r\n      return {\r\n        ItemFromName: data?.ItemFromTitle || \"N/A\",\r\n        ItemToName: data?.ItemToTitle || \"N/A\",\r\n        ItemRev: data?.ItemRev || \"N/A\",\r\n        ItemType: data?.ItemType || \"N/A\",\r\n        ItemId: data?.ItemId || \"N/A\", \r\n        ItemSeq: data?.ItemSeq || \"N/A\",\r\n        ItemNextSeqMCO: data?.ItemNextSeqMCO || \"N/A\",\r\n        ItemPrevSeqMCO: data?.ItemPrevSeqMCO || \"N/A\",\r\n      };\r\n    } \r\n  });\r\n};\r\n\r\nexport const getUniqueTableData = (uniqueData) => {\r\n  if (!uniqueData) return [];\r\n  return uniqueData.map((plant) => ({\r\n    \"Available Plant\": plant?.title || \"N/A\",\r\n  }));\r\n};\r\n\r\nexport const tableColumns = (CAName, type, isRemoveMode, handleRemovePlant) => {\r\n  console.log(\"type here is: \", type);\r\n  if (type === \"Route\") {\r\n    return [\r\n      { accessorKey: \"ItemName\", header: \"Name\" },\r\n      { accessorKey: \"ItemRev\", header: \"Rev\" },\r\n      { accessorKey: \"ItemType\", header: \"Type\" },\r\n      { accessorKey: \"ItemPolicy\", header: \"Policy\"},\r\n      { accessorKey: \"ItemMakeBuy\", header: \"Make/Buy\" },\r\n      { accessorKey: \"ItemSeq\", header: \"Sequence\" },\r\n      { accessorKey: \"ItemPrevSeqMCO\", header: \"Prev. Seq. MCO\" },\r\n      { accessorKey: \"ItemPrevSeqStartDate\", header: \"Prev. Seq. Start Date\" },\r\n      { accessorKey: \"ItemNextSeqMCO\", header: \"Next Seq MCO\" },\r\n      { accessorKey: \"ItemNextSeqStartDate\", header: \"Next Seq Start Date\" },\r\n    ];\r\n  }\r\n};\r\n\r\n\r\nexport const tableColumnsMBOMConnections = (CAName, type, isRemoveMode, handleRemovePlant) => {\r\n  console.log(\"type here is: \", type);\r\n  if (type === \"Route\") {\r\n    return [\r\n      { accessorKey: \"ItemFromName\", header: \"From Part\" },\r\n      { accessorKey: \"ItemToName\", header: \"To Part\" },\r\n      { accessorKey: \"ItemFindNumber\", header: \"F/N\" },\r\n      { accessorKey: \"ItemRefDes\", header: \"Ref Des\"},\r\n      { accessorKey: \"ItemMfgUsageCode\", header: \"Manufacturing Usage Code\" },\r\n      { accessorKey: \"ItemSeq\", header: \"Sequence\" },\r\n      { accessorKey: \"ItemPrevSeqMCO\", header: \"Prev. Seq. MCO\" },\r\n      { accessorKey: \"ItemPrevSeqStartDate\", header: \"Prev. Seq. Start Date\" },\r\n      { accessorKey: \"ItemNextSeqMCO\", header: \"Next Seq MCO\" },\r\n      { accessorKey: \"ItemNextSeqStartDate\", header: \"Next Seq Start Date\" },\r\n      { accessorKey: \"ItemChildMCO\", header: \"Child MCO\" },\r\n      { accessorKey: \"ItemChildStartDate\", header: \"Child Start Date\" },\r\n    ];\r\n  }\r\n};\r\n\r\nexport const uniqueColumns = [\r\n  { accessorKey: \"Available Plant\", header: \"Available Plant\" },\r\n];\r\n\r\n\r\nexport function processErrorObj(\r\n  errorObj,\r\n  assignedPlant,\r\n  updatedAssignedClasses,\r\n  uniquePlant\r\n) {\r\n  console.log(\"Assigned Plants are:\", assignedPlant);\r\n  console.log(\"unique Plants are:\", uniquePlant);\r\n  errorObj.forEach((item) => {\r\n    if (item.type === \"New\") {\r\n      // Remove from assignedPlant\r\n\r\n      updatedAssignedClasses = updatedAssignedClasses.filter(\r\n        (plant) => plant.title !== item.title\r\n      );\r\n\r\n      // Add to uniquePlant if not already present\r\n      if (!uniquePlant.some((plant) => plant.title === item.title)) {\r\n        uniquePlant.push(item);\r\n      }\r\n    } else if (item.type === \"Update\") {\r\n      // Modify mbom to \"buy\" in assignedPlant\r\n      updatedAssignedClasses = updatedAssignedClasses.map((plant) =>\r\n        plant.title === item.title ? { ...plant, MBOM: \"false\" } : plant\r\n      );\r\n    }\r\n  });\r\n\r\n  // Update the table (assuming a render function exists)\r\n\r\n  return { updatedAssignedClasses, uniquePlant };\r\n}\r\n\r\nexport const formattedFinalMessage = (finalMessage) => {\r\n  if (!finalMessage) return \"An error occurred.\";\r\n\r\n  const messageList = finalMessage\r\n    .split(\"\\n\")\r\n    .filter((msg) => msg.trim() !== \"\");\r\n\r\n  const handleCopy = () => {\r\n    const textToCopy = messageList.map((msg) => `- ${msg}`).join(\"\\n\");\r\n    navigator.clipboard.writeText(textToCopy);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        userSelect: \"text\",\r\n        cursor: \"text\",\r\n        position: \"relative\",\r\n        paddingRight: \"40px\",\r\n      }}\r\n    >\r\n      <strong>Errors:</strong>\r\n      <button\r\n        onClick={handleCopy}\r\n        style={{\r\n          position: \"absolute\",\r\n          right: \"10px\",\r\n          top: \"-12px\",\r\n          background: \"none\",\r\n          border: \"none\",\r\n          cursor: \"pointer\",\r\n          fontSize: \"16px\",\r\n          color: \"grey\",\r\n        }}\r\n      >\r\n        <FaRegCopy size={12} />\r\n      </button>\r\n      <ol>\r\n        {messageList.map((msg, index) => (\r\n          <li key={index}>{msg}</li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport { getUserGroupCollab } from \"../services/api/PlantAssignment/userGroupService\";\r\nimport { getAllPlants } from \"../services/api/PlantAssignment/allPlantSevice\";\r\n\r\nimport { fetchProductChildren } from \"../services/api/PlantAssignment/plantChildrenService\";\r\nimport { fetchCADetails } from \"../services/api/PlantAssignment/CADetailService\";\r\nimport { fetchAssignedPlants } from \"../services/api/PlantAssignment/assignedPlantService\";\r\n\r\n\r\nimport {\r\n  setCAAllPlants,\r\n  setCAHeaders,\r\n  setCAItemDetails,\r\n  setCAName,\r\n  setHeaders,\r\n  setIsMFGCA,\r\n  setParentDetailsLoading,\r\n  setPlantObjectData,\r\n  setProductChildren,\r\n  setProposedChanges,\r\n  setCAData,\r\n  setMCAItemDetails,\r\n  setMCAItemDetails2,\r\n  setMCAItemObjectDetails,\r\n} from \"../store/droppedObjectSlice\";\r\nimport { useState } from \"react\";\r\nimport { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../utils/toastMessages\";\r\nimport useToast from \"./useToast\";\r\nimport { fetchCsrfToken } from \"../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { initWidget } from \"../lib/widget\";\r\nimport { callEnoviaWebService } from \"../utils/helpers\";\r\n\r\nconst useMBOMImpactReport = () => {\r\n  const { showErrorToast } = useToast();\r\n  const dispatch = useDispatch();\r\n\r\n  let email = window.widget.getValue(\"email\");\r\n  console.log(\"Email in usePlantAssignment:\", email);\r\n\r\n  const handlePlantAssignment = async (collabSpace, state, objectId, type, routeName) => {\r\n    try {\r\n      dispatch(setParentDetailsLoading(true)); // Start loading state\r\n\r\n      // Fetch CSRF headers\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n      console.log(\"[UsePlantAssignment] Headers:\", headers);\r\n\r\n      let ItemDetails = [];\r\n      let ItemDetails2 = [];\r\n\r\n      // Handle \"Change Action\" type separately\r\n      if (type === \"Route\") {\r\n        console.log(\"Type begining className\", routeName)\r\n        let isMFGCA = false;\r\n        let CAObjectId = \"\";\r\n        console.log(\"The object Type is Route\");\r\n        const fetchChangeActionData = async () => {\r\n          // connected CA Details\r\n          const routeURL = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dsrt/routes/${objectId}/contents`;\r\n          const routeResponse = await callEnoviaWebService(\r\n            \"GET\",\r\n            routeURL,\r\n            \"\",\r\n            headers\r\n          );\r\n          console.log(\"Response from route URL:\", routeResponse.output);\r\n          if (routeResponse.status && routeResponse.output) {\r\n            CAObjectId = routeResponse.output.data[0].id;\r\n          }\r\n\r\n          // connected manufacturing items (proposed changes)\r\n          const CAURL = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslc/changeaction/${CAObjectId}?%24fields=proposedChanges,realizedChanges`;\r\n          const response = await callEnoviaWebService(\r\n            \"GET\",\r\n            CAURL,\r\n            \"\",\r\n            headers\r\n          );\r\n          console.log(\"Response from Change Action URL:\", response);\r\n\r\n          if (response.status && response.output) {\r\n            const changeProcessingPromises =\r\n              response.output.proposedChanges.map(async (change) => {\r\n                let proposedItemId = change.where.identifier;\r\n                let proposedItemType = change.where.type;\r\n                console.log(\"line number 91\", routeName)\r\n                const MCODetails = await getPrevAndNextSeqMCO(proposedItemId, headers, routeName);\r\n                const nextSeqMCO = MCODetails?.nextSeqMCO;\r\n                const prevSeqMCO = MCODetails?.prevSeqMCO;\r\n                const MCOSeq = MCODetails?.MCOSeq;\r\n                \r\n                const expandItemDetails = await expandItms(proposedItemId, headers);\r\n                console.log(\"expandItemDetails ----\",expandItemDetails);\r\n                let iSize = expandItemDetails?.expandItmArray.length;\r\n                let proposedItemTitle = expandItemDetails?.expandItmArray[0]?.title;\r\n                let expandItemTitle = \"\";\r\n                if(iSize > 1)\r\n                  expandItemTitle = proposedItemTitle;\r\n                for (let z = 0; z < iSize; z++) {\r\n                  let ItemId = expandItemDetails?.expandItmArray[z]?.id;\r\n                  let ItemType = expandItemDetails?.expandItmArray[z]?.type;\r\n\r\n                  const engItemDetails = await getScopedItms(ItemId, headers);\r\n                  console.log(\"engItemDetails Details are:\", engItemDetails);\r\n                  let EngItemId = engItemDetails.identifier;\r\n\r\n                  if ( EngItemId !== undefined && proposedItemId !== undefined && proposedItemType !== undefined ) {\r\n                    try {\r\n                      const [ItemPlants, Iteminfo] = await Promise.all([\r\n                        getAssignedClasses(EngItemId, headers, routeName.split('-')[2]),\r\n                        getMfgItemDetails(ItemId, ItemType, headers),\r\n                      ]);\r\n                      console.log(\"ItemPlants --- \", ItemPlants);\r\n                      console.log(\"Iteminfo --- \", Iteminfo);\r\n                      // Push only proposed changes to display in Part Rev table\r\n                      if (proposedItemId === Iteminfo?.member[0].id) {\r\n                        ItemDetails.push({\r\n                          ItemId,\r\n                          ItemType,\r\n                          ItemState: Iteminfo?.member[0].state || \"N/A\",\r\n                          ItemTitle: Iteminfo?.member[0].title || \"N/A\",\r\n                          ItemRev: Iteminfo?.member[0].revision || \"N/A\",\r\n                          ItemMBOM: ItemPlants[0]?.MBOM === true ? \"Make\" : \"Buy\",\r\n                          ItemSeq: ItemPlants[0]?.Seq || \"N/A\",\r\n                          ItemPrevSeqMCO: prevSeqMCO || \"N/A\",\r\n                          ItemNextSeqMCO: nextSeqMCO || \"N/A\",\r\n                          // ItemERPStatus: ItemPlants[0]?.PlantStatus || \"N/A\",\r\n                          // ItemPlantName: ItemPlants[0]?.PlantName,\r\n                        });\r\n                      }\r\n                    // Push the proposed changes & its children to display in MBOM Connection table\r\n                    if (expandItemTitle && (expandItemTitle !== Iteminfo?.member[0].title)) {\r\n                      ItemDetails2.push({\r\n                        ItemId,\r\n                        ItemType,\r\n                        ItemState: Iteminfo?.member[0].state || \"N/A\",\r\n                        ItemFromTitle: expandItemTitle || \"N/A\",\r\n                        ItemToTitle: Iteminfo?.member[0].title || \"N/A\",\r\n                        ItemMBOM:\r\n                          Iteminfo?.member[0]?.[\"dseno:EnterpriseAttributes\"]\r\n                            ?.EMR_hasMBOM || \"N/A\",\r\n                        ItemSeq: ItemPlants[0]?.Seq || \"N/A\",\r\n                        ItemPrevSeqMCO: prevSeqMCO || \"N/A\",\r\n                        ItemNextSeqMCO: nextSeqMCO || \"N/A\",\r\n                        ItemERPStatus: ItemPlants[0]?.PlantERPStatus || \"N/A\",\r\n                      });\r\n                    }\r\n                      console.log(\"MCA ItemDetails\", ItemDetails);\r\n                      console.log(\"MCA ItemDetails2\", ItemDetails2);\r\n                    } catch (err) {\r\n                      console.error(\r\n                        `Error processing change for item ${ItemId}:`,\r\n                        err\r\n                      );\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n\r\n            await Promise.all(changeProcessingPromises);\r\n\r\n          } else {\r\n            console.error(\"Invalid response structure or no proposed changes.\");\r\n          }\r\n        };\r\n        const CAAllPlantsData = async () => {\r\n          // Replace this with your actual API call\r\n          const allPlants = await getAllPlants(\r\n            [collabSpace],\r\n            headers,\r\n            objectId\r\n          ); // getAllPlants wants collabspace as an array.\r\n          console.log(\"Parallel API response:\", allPlants);\r\n          dispatch(setCAAllPlants(allPlants));\r\n        };\r\n\r\n        // Run both functions in parallel\r\n        await Promise.all([fetchChangeActionData(), CAAllPlantsData()]);\r\n\r\n        //dispatch(setParentDetailsLoading(false));\r\n        dispatch(setMCAItemDetails(ItemDetails));\r\n        dispatch(setMCAItemDetails2(ItemDetails2));\r\n        dispatch(setIsMFGCA(isMFGCA));\r\n        //dispatch(setMCAHeaders(headers));\r\n      } else {\r\n        // Step 1: Fetch user group collaboration spaces\r\n        const userGroupCollab = await getUserGroupCollab(\r\n          headers,\r\n          objectId,\r\n          email\r\n        );\r\n        console.log(\"[Plant Assignment] User Groups:\", userGroupCollab);\r\n\r\n        let allCollabSpaces = [...userGroupCollab, collabSpace];\r\n        console.log(\r\n          \"[Use Plant Assignment] All CollabSpaces:\",\r\n          allCollabSpaces\r\n        );\r\n\r\n        // Step 2: Fetch all plants if collab spaces exist\r\n        let allPlants = [];\r\n        if (allCollabSpaces.length > 0) {\r\n          allPlants = await getAllPlants(allCollabSpaces, headers, objectId);\r\n          console.log(\"[Use Plant Assignment] All Plants:\", allPlants);\r\n        } else {\r\n          console.warn(\"[Use Plant Assignment] No CollabSpaces found.\");\r\n        }\r\n\r\n        // Step 3: Fetch assigned plants if there are any\r\n        if (allPlants.length > 0) {\r\n          const plants = await fetchAssignedPlants(\r\n            allPlants,\r\n            headers,\r\n            objectId\r\n          );\r\n          console.log(\"[Use Plant Assignment]: \", plants);\r\n\r\n          if (plants.success) {\r\n            dispatch(setPlantObjectData(plants.data.plantData));\r\n            dispatch(setHeaders(headers));\r\n          } else {\r\n            console.error(\"Failed to fetch plant data.\");\r\n          }\r\n        } else {\r\n          console.warn(\"[Use Plant Assignment] No Plants found.\");\r\n        }\r\n\r\n        // Step 4: Fetch Product Children based on type\r\n        let getProductChildren = {};\r\n        if (type === \"Raw_Material\") {\r\n          getProductChildren = { success: true, data: [] };\r\n        } else {\r\n          getProductChildren = await fetchProductChildren(\r\n            headers,\r\n            objectId,\r\n            type\r\n          );\r\n        }\r\n\r\n        console.log(\"Type After:\", type);\r\n        console.log(\r\n          \"[Use Plant Assignment] Product Children:\",\r\n          getProductChildren\r\n        );\r\n\r\n        if (getProductChildren.success) {\r\n          dispatch(setProductChildren(getProductChildren.data));\r\n        }\r\n\r\n        // Step 5: Fetch Change Action details\r\n        const getCaDetails = await fetchCADetails(headers, objectId, state);\r\n        console.log(\"[Use Plant Assignment] CA Details:\", getCaDetails);\r\n\r\n        if (getCaDetails.success) {\r\n          dispatch(setCAName(getCaDetails.data));\r\n          dispatch(setProposedChanges(getCaDetails.proposedChanges));\r\n          dispatch(setCAData(getCaDetails.CAData));\r\n        }\r\n\r\n        console.log(\"[Plant Assignment] All services executed successfully.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[Plant Assignment] Error:\", error);\r\n      showErrorToast(\"An error occurred while fetching plant assignment data.\");\r\n    } finally {\r\n      dispatch(setParentDetailsLoading(false)); // Ensure loading is disabled in all cases\r\n    }\r\n  };\r\n\r\n  return { handlePlantAssignment };\r\n};\r\n\r\nexport default useMBOMImpactReport;\r\n\r\n// Function to call the relevant URL for a ClassifiedItem using a single identifier\r\nasync function getAssignedClasses(identifier, headers, className) {\r\n  const attributeData = [];\r\n  let classIdFromLibrary;\r\n  if(className){\r\n    classIdFromLibrary = await getClassId(headers, className);\r\n  }\r\n  console.log(\"className\", className)\r\n  console.log(\"classIdFromLibrary\", classIdFromLibrary)\r\n  \r\n  try {\r\n    const url = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslib/dslib:ClassifiedItem/${identifier}?$mask=dslib:ClassificationAttributesMask`;\r\n    const itemResponse = await callEnoviaWebService(\"GET\", url, \"\", headers);\r\n    console.log(`Response for identifier ${identifier}:`, itemResponse);\r\n    if(itemResponse?.status){\r\n      // const items = itemResponse?.output?.member[0][\"ClassificationAttributes\"]\r\n      // console.log(\"items\", items);  \r\n      // const classAttributes = items?.member?.find((item)=>item[\"ClassID\"] === classIdFromLibrary)\r\n      // console.log(\"classAttributes\", classAttributes);\r\n      // return classAttributes\r\n\r\n      \r\n      itemResponse?.output?.member[0]?.ClassificationAttributes?.member.forEach(\r\n        (classification) => {\r\n          const classId = classification.ClassID;\r\n          // let plantName = null;\r\n          // let erpStatus = null;\r\n          let sequence = null;\r\n          let mcoName = null;\r\n          let MBOM = null;\r\n          let previousSequence = null;\r\n \r\n          classification.Attributes.forEach((attribute) => {\r\n            // if (attribute.name.includes(\"PlantId\")) {\r\n            //   plantName = attribute.value;\r\n            // }\r\n            // if (attribute.name.includes(\"EMRPlantStatus\")) {\r\n            //   erpStatus = attribute.value;\r\n            // }\r\n            if (attribute.name.includes(\"EMRPlantSequence\")) {\r\n              sequence = attribute.value;\r\n            }\r\n            if (attribute.name.includes(\"EMRMCOName\")) {\r\n              mcoName = attribute.value;\r\n            }\r\n            if (attribute.name.includes(\"EMRPlantMBOM\")) {\r\n              MBOM = attribute.value;\r\n            }\r\n            if (attribute.name.includes(\"EMRPlantPreviousSequence\")) {\r\n              previousSequence = attribute.value;\r\n            }\r\n          });\r\n \r\n            attributeData.push({\r\n              // PlantName: plantName,\r\n              PlantID: classId,\r\n              Seq: sequence,\r\n              // PlantERPStatus: erpStatus,\r\n              McoName: mcoName,\r\n              MBOM: MBOM,\r\n              PrevSeq: previousSequence\r\n            });\r\n        }\r\n      );\r\n    \r\n    }\r\n    // if(itemResponse){}\r\n    /* itemResponse.ouput = {\r\n    \"totalItems\": 1,\r\n    \"member\": [\r\n        {\r\n            \"id\": \"7D56FB4B3C8337006849795A000013F9\",\r\n            \"name\": \"prd-OI000186152-00125225\",\r\n            \"ClassificationAttributes\": {\r\n                \"totalItems\": 2,\r\n                \"member\": [\r\n                    {\r\n                        \"ClassID\": \"31E73915B5790200680E5410000008B9\",\r\n                        \"Attributes\": [\r\n                            {\r\n                                \"name\": \"EMRPlantTemplate\",\r\n                                \"value\": \"\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantSequence\",\r\n                                \"value\": \"1\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantAddSequence\",\r\n                                \"value\": \"0\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRMCOName\",\r\n                                \"value\": \"\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantAssignmentClass\",\r\n                                \"value\": true\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantStatus\",\r\n                                \"value\": \"\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantMBOM\",\r\n                                \"value\": false\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantPreviousSequence\",\r\n                                \"value\": \"\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"ClassID\": \"31E73915B5790200680E542B000008BB\",\r\n                        \"Attributes\": [\r\n                            {\r\n                                \"name\": \"EMRPlantTemplate\",\r\n                                \"value\": \"\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantSequence\",\r\n                                \"value\": \"1\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantAddSequence\",\r\n                                \"value\": \"0\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRMCOName\",\r\n                                \"value\": \"\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantAssignmentClass\",\r\n                                \"value\": true\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantStatus\",\r\n                                \"value\": \"\"\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantMBOM\",\r\n                                \"value\": false\r\n                            },\r\n                            {\r\n                                \"name\": \"EMRPlantPreviousSequence\",\r\n                                \"value\": \"\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"cestamp\": \"7D56FB4B93E50500684BC9D5000E9BE4\"\r\n        }\r\n    ],\r\n    \"nlsLabel\": {\r\n        \"id\": \"Id\",\r\n        \"name\": \"Name\",\r\n        \"title\": \"Title\",\r\n        \"libraryUsage\": \"Purpose\",\r\n        \"classUsage\": \"Purpose\"\r\n    }\r\n}\r\n\r\n    */\r\n    // if (Any of the classId from abouve output matches with \"classIdFromLibrary\") {\r\n      \r\n    //   itemResponse.output.member[index of matching object].ClassificationAttributes.member.forEach(\r\n    //     (classification) => {\r\n    //       const classId = classification.ClassID;\r\n    //       let plantName = null;\r\n    //       let erpStatus = null;\r\n    //       let sequence = null;\r\n    //       let flowDownCA = null;\r\n    //       let MBOM = null;\r\n \r\n          // classification.Attributes.forEach((attribute) => {\r\n          //   if (attribute.name.includes(\"PlantId\")) {\r\n          //     plantName = attribute.value;\r\n          //   }\r\n          //   if (attribute.name.includes(\"ERPStatus\")) {\r\n          //     erpStatus = attribute.value;\r\n          //   }\r\n          //   if (attribute.name.includes(\"Seq\")) {\r\n          //     sequence = attribute.value;\r\n          //   }\r\n          //   if (attribute.name.includes(\"MCOName\")) {\r\n          //     flowDownCA = attribute.value;\r\n          //   }\r\n          //   if (attribute.name.includes(\"MBOM\")) {\r\n          //     MBOM = attribute.value;\r\n          //   }\r\n          // });\r\n \r\n    //         plantIdData.push({\r\n    //           PlantName: plantName,\r\n    //           PlantID: classId,\r\n    //           Seq: sequence,\r\n    //           PlantERPStatus: erpStatus,\r\n    //           FlowDownCA: flowDownCA,\r\n    //           MBOM: MBOM,\r\n    //         });\r\n    //     }\r\n    //   );\r\n    // } else {\r\n    //   console.log(`No valid classification data for identifier ${identifier}`);\r\n    // }\r\n  } catch (error) {\r\n    console.error(`Error fetching assigned classes for ${identifier}:`, error);\r\n  }\r\n \r\n  return attributeData;\r\n}\r\n\r\nasync function getMfgItemDetails(identifier, ItemType, headers) {\r\n  let url = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dsmfg/dsmfg:MfgItem/${identifier}?mask=dsmfg:MfgItemMask.Details`;\r\n  \r\n  try {\r\n    const itemResponse = await callEnoviaWebService(\"GET\", url, \"\", headers);\r\n\r\n    if (itemResponse.status && itemResponse.output) {\r\n      return itemResponse.output;\r\n    } else {\r\n      console.log(`No valid response for identifier ${identifier}`);\r\n      return {}; // Return an empty object if the response is invalid\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching item details for ${identifier}:`, error);\r\n    return {}; // Return an empty object on error\r\n  }\r\n}\r\n\r\nasync function getLatestRevision(identifier, type, headers) {\r\n  const revurl = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslc/version/getGraph`;\r\n  const ret = \"\";\r\n  try {\r\n    const relativePath =\r\n      (type === \"CreateAssembly\" || type === \"Provide\")\r\n        ? `/resources/v1/modeler/dsmfg/dsmfg:MfgItem/${identifier}`\r\n        : `/resources/v1/modeler/dseng/dseng:EngItem/${identifier}`;\r\n\r\n    const Body = {\r\n      data: [\r\n        {\r\n          id: identifier,\r\n          identifier: identifier,\r\n          type: type,\r\n          source: \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia\",\r\n          relativePath: relativePath,\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Make the API call with the dynamically created body\r\n    const response = await callEnoviaWebService(\r\n      \"POST\",\r\n      revurl,\r\n      JSON.stringify(Body),\r\n      headers\r\n    );\r\n\r\n    // Check if the response contains status and output properties\r\n    if (response.status && response.output) {\r\n      // Loop through each result in the response and check for ancestors\r\n      for (const result of response.output.results) {\r\n        if (\r\n          result.ancestors &&\r\n          result.ancestors.some(\r\n            (ancestor) => ancestor.identifier === identifier\r\n          )\r\n        ) {\r\n          return result.id;\r\n        }\r\n      }\r\n    } else {\r\n      console.error(\r\n        \"API response does not contain the expected 'status' and 'output'.\"\r\n      );\r\n      return ret;\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching getLatestRevision for ${identifier}:`, error);\r\n    return ret;\r\n  }\r\n}\r\nasync function getScopedItms(identifier, headers) {\r\n  let url = \"\";\r\n\r\n  url = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dsmfg/dsmfg:MfgItem/${identifier}/dsmfg:ScopeEngItem`;\r\n\r\n  try {\r\n    const itemResponse = await callEnoviaWebService(\"GET\", url, \"\", headers);\r\n\r\n    if (itemResponse.status && itemResponse.output) {\r\n      return {\r\n        identifier: itemResponse.output.member[0].ScopeEngItem.identifier,\r\n        type: itemResponse.output.member[0].ScopeEngItem.type,\r\n      };\r\n    } else {\r\n      console.log(`No valid response for identifier ${identifier}`);\r\n      return {}; // Return an empty object if the response is invalid\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching item details for ${identifier}:`, error);\r\n    return {}; // Return an empty object on error\r\n  }\r\n}\r\n\r\nasync function expandItms(identifier, headers) {\r\n  let url = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dsmfg/dsmfg:MfgItem/${identifier}/expand?$mask=dsmfg:MfgItem.ExpandMask.Default.V1`;\r\n  const body = {\r\n    \"expandDepth\": 1,\r\n    \"withPath\": false\r\n  };\r\n  try {\r\n    const expandResponse = await callEnoviaWebService(\"POST\", url, body, headers);\r\n    console.log(\"expandItms --1-- \",expandResponse?.output);\r\n    if (expandResponse.status && expandResponse.output) {\r\n      const expandItmArray = [];\r\n      const totalSize = expandResponse?.output?.totalItems;\r\n      // if(totalSize > 1){\r\n        for (let i = 0; i < totalSize; i++) {\r\n          const item = expandResponse?.output?.member[i];\r\n          const jsonObject = {\r\n            id: item.id,\r\n            type: item.type,\r\n            title: item.title\r\n          };\r\n          if(item.type === \"CreateAssembly\" || item.type === \"Provide\")\r\n            expandItmArray.push(jsonObject);\r\n        }\r\n      //}\r\n      console.log(\"expandItmArray ---- \",expandItmArray);\r\n      return {expandItmArray};\r\n    } else {\r\n      console.log(`No valid response for identifier ${identifier}`);\r\n      return {}; // Return an empty object if the response is invalid\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching item details for ${identifier}:`, error);\r\n    return {}; // Return an empty object on error\r\n  }\r\n}\r\n\r\nasync function getPreviousSeqRevision(identifier, className, headers){\r\n  try{\r\n    let url = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslc/version/getGraph`;\r\n    const body = {\r\n        \"data\": [\r\n          {\r\n            \"id\": identifier,\r\n            \"identifier\": identifier,\r\n            \"type\": \"CreateAssembly\",\r\n            \"source\": \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia\",\r\n            \"relativePath\": `/resources/v1/modeler/dsmfg/dsmfg:MfgItem/${identifier}`\r\n          }\r\n        ]\r\n    }\r\n    const expandResponse = await callEnoviaWebService(\"POST\", url, body, headers);\r\n    console.log(\"getPrevSeqMCO --1-- \",expandResponse?.output);\r\n    if(expandResponse.status){\r\n      const ItemId = await findPreviousRevisionIdentifier(expandResponse.output, identifier);\r\n      if(ItemId){\r\n      const engItemDetails = await getScopedItms(ItemId, headers);\r\n        if(engItemDetails){\r\n          let EngItemId = engItemDetails.identifier;\r\n          const classAttr = await getAssignedClasses(EngItemId, headers,className);\r\n          console.log(\"classAttr -- 2 -- \",classAttr);  \r\n          return classAttr;\r\n        }\r\n      }\r\n      \r\n    }\r\n  } catch(error){\r\n    console.log(\"error in getPrevAndNextSeqMCO\", error);\r\n  }\r\n}\r\n\r\nasync function getPrevAndNextSeqMCO(identifier, headers, mcoName) {\r\n  let prevSeqMCO = \"\";\r\n  let nextSeqMCO = \"\";\r\n  let MCOSeq = \"\";\r\n  console.log(\"mcoName\", mcoName)\r\n  let className = mcoName.split('-')[2];\r\n  console.log(\"className in PREV Sequence\",className)\r\n  //Get Scoped eng item\r\n  const engItemDetails = await getScopedItms(identifier, headers);\r\n        if(engItemDetails){\r\n          let EngItemId = engItemDetails.identifier;\r\n          //get classification attributes for the eng item from class className\r\n          const classAttr = await getAssignedClasses(EngItemId, headers, className);\r\n          console.log(\"classAttr -- 1 -- \",classAttr);\r\n          // case1 When the current MCO Name matches MCOName\r\n          if(classAttr[0]?.McoName === mcoName){\r\n            if(classAttr[0]?.PrevSeq){\r\n              prevSeqMCO = classAttr[0]?.PrevSeq.split('-')[0];\r\n              MCOSeq = classAttr[0]?.PrevSeq.split('-')[5];\r\n              console.log(\"prevSeqMCO\", prevSeqMCO);\r\n              console.log(\"MCOSeq\", MCOSeq);\r\n            }else{\r\n                  // try{\r\n                  //   let url = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslc/version/getGraph`;\r\n                  //   const body = {\r\n                  //       \"data\": [\r\n                  //         {\r\n                  //           \"id\": identifier,\r\n                  //           \"identifier\": identifier,\r\n                  //           \"type\": \"CreateAssembly\",\r\n                  //           \"source\": \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia\",\r\n                  //           \"relativePath\": `/resources/v1/modeler/dsmfg/dsmfg:MfgItem/${identifier}`\r\n                  //         }\r\n                  //       ]\r\n                  //   }\r\n                  //   const expandResponse = await callEnoviaWebService(\"POST\", url, body, headers);\r\n                  //   console.log(\"getPrevSeqMCO --1-- \",expandResponse?.output);\r\n                  //   if(expandResponse.status){\r\n                  //      const ItemId = await findPreviousRevisionIdentifier(expandResponse.output, identifier);\r\n                  //      if(ItemId){\r\n                  //       const engItemDetails = await getScopedItms(ItemId, headers);\r\n                  //       if(engItemDetails){\r\n                  //         let EngItemId = engItemDetails.identifier;\r\n                  //         const classAttr = await getAssignedClasses(EngItemId, headers,className);\r\n                  //         console.log(\"classAttr -- 2 -- \",classAttr);  \r\n                  //         if(classAttr[0]?.PrevSeq){\r\n                  //           MCOSeq = classAttr[0]?.Seq;\r\n                  //           prevSeqMCO = classAttr[0]?.McoName;\r\n                  //           console.log(\"prevSeqMCO\", prevSeqMCO);\r\n                  //           console.log(\"MCOSeq\", MCOSeq);\r\n                  //         }\r\n                         \r\n                  //       }\r\n                  //      }else{\r\n                  //       console.log(`Previous revision does NOT exist for identifier ${identifier}`);\r\n                  //       prevSeqMCO = \"\";\r\n                  //       MCOSeq = \"\";\r\n                  //      }\r\n                  //   }\r\n                  // } catch(error){\r\n                  //   console.log(\"error in getPrevAndNextSeqMCO\", error);\r\n                  // }\r\n\r\n                  const classAttr = await getPreviousSeqRevision(identifier, className, headers);\r\n                  if(classAttr[0]?.PrevSeq){\r\n                    MCOSeq = classAttr[0]?.Seq;\r\n                    prevSeqMCO = classAttr[0]?.McoName;\r\n                    console.log(\"prevSeqMCO in case 1\", prevSeqMCO);\r\n                    console.log(\"MCOSeq in case 1\", MCOSeq);\r\n                  }else{\r\n                    console.log(`Previous revision does NOT exist for identifier ${identifier}`);\r\n                    prevSeqMCO = \"\";\r\n                    MCOSeq = \"\";\r\n                  }\r\n            }\r\n\r\n          }\r\n\r\n          // case2 When the current MCO Name is present in the \"Previous Sequence\" attribute\r\n          // const previousSequence = \"MCO-00005693-MVO-OracleTemplate-True-2-1, MCO-00008983-MVO-OracleTemplate-True-3-2, MCO-00009563-MVO-OracleTemplate-True-4-3\"\r\n          const previousSequence = classAttr[0]?.PrevSeq;          // Split the previousSequence by comma to get each entry\r\n          const entries = previousSequence.split(\",\").map(entry => entry.trim());\r\n          console.log(\"entries\", entries);\r\n          \r\n          // Find the full entry where first 3 parts match mcoName\r\n          const matchedEntry = entries.find(entry => {\r\n            console.log(\"entry\", entry);\r\n            const parts = entry.split(\"-\");\r\n            console.log(\"parts\", parts);\r\n            const firstThree = parts.slice(0, 3).join(\"-\");\r\n            console.log(\"firstThree\", firstThree);\r\n            console.log(\"mcoName\", mcoName);\r\n            return firstThree === mcoName;\r\n          });\r\n          console.log(\"matchedEntry\", matchedEntry);\r\n          if (matchedEntry) {\r\n            const index = entries.indexOf(matchedEntry);\r\n\r\n            if (index !== -1) {\r\n              const previousIndex = index > 0 ? index - 1 : null;\r\n              // const nextIndex = index < entries.length - 1 ? index + 1 : null;\r\n              // Values at those indices\r\n              const previousValue = previousIndex !== null ? entries[previousIndex] : null;\r\n              // const nextValue = nextIndex !== null ? entries[nextIndex] : null;\r\n\r\n              const mcoNamefromPrevSeqValues = previousValue.split(\"-\");\r\n              prevSeqMCO = mcoNamefromPrevSeqValues.slice(0, 3).join(\"-\");\r\n              console.log('prevSeqMCO', prevSeqMCO)\r\n              MCOSeq = mcoNamefromPrevSeqValues[mcoNamefromPrevSeqValues.length - 2]\r\n              console.log('MCOSeq in another case', MCOSeq)\r\n              // console.log(\"Next Index:\", nextIndex, \"with value:\", nextValue);\r\n            }\r\n          } else {\r\n            const classAttr = await getPreviousSeqRevision(identifier, className, headers);\r\n            console.log(\"Case 2 4th point\", classAttr)\r\n          }\r\n          \r\n\r\n          //From classAttr get the class details whose name is matching with the suffix of dropped MCO\r\n          //get the PreviousSequence attribute from classAttr\r\n          // Format of values of attribute PreviousSequence -  MCONAME-TEMPLATE-MBOM-SEQ-ADDSeq,  MCONAME2-TEMPLATE2-MBOM-SEQ2-ADDSeq2\r\n          // For example, PreviousSequence = MCO-00005693-MVO-OracleTemplate-True-2-1, MCO-00008893-MVO-OracleTemplate-True-3-2, MCO-00009563-MVO-OracleTemplate-True-4-3\r\n              \r\n             /* ✅ Case 1: When the current MCO Name matches MCOName\r\n              Check if the \"Previous Sequence\" attribute is not empty:\r\n                If not empty:\r\n                  Fetch the latest MCO and Sequence values from the Previous Sequence attribute. \r\n                  This is value of prev seq MCO & Sequence.\r\n                If empty:\r\n                  Look into the previous revision to get its MCO Name and Sequence. This is value of prev seq MCO & Sequence.\r\n                  If previous revision does not exist, then set orev seq MCO Name and Sequence as empty.\r\n          */\r\n        /*     Case 2: When the current MCO Name is present in the \"Previous Sequence\" attribute\r\n                  1.\tSplit the Previous Sequence attribute (comma-separated string).\r\n                  2.\tSearch the list for a match to the current MCO.\r\n                  3.\tIf found:\r\n                    o\tSet previous MCO and sequence from this attribute.\r\n                  4.\tIf not found:\r\n                    o\tCheck the previous revision & get the MCO Name and Sequence. This is value of prev seq MCO & Sequence.\r\n                  5.\tFor the next MCO and sequence:\r\n                    o\tSplit the Previous Sequence attribute.\r\n                    o\tTry to find the next MCO after the current MCO in the list.\r\n                    o\tIf found, \r\n                      use it as the next MCO and sequence.\r\n                    o\tIf not found:\r\n                      \tIf next revision exist\r\n                        •\tCheck the next revision's Previous Sequence attribute.\r\n                        •\tIf prev seq not empty, take the first value from it as the next MCO and sequence.\r\n                        •\tIf prev seq is empty, get MCOName & sequence as next MCO and sequence.\r\n                      \tIf next rev does not exist\r\n                        •\tnext seq MCO and sequence will be empty.\r\n                  */\r\n            }\r\n          \r\n\r\n            try {\r\n    let url = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslc/version/getGraph`;\r\n    const body = {\r\n        \"data\": [\r\n          {\r\n            \"id\": identifier,\r\n            \"identifier\": identifier,\r\n            \"type\": \"CreateAssembly\",\r\n            \"source\": \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia\",\r\n            \"relativePath\": `/resources/v1/modeler/dsmfg/dsmfg:MfgItem/${identifier}`\r\n          }\r\n        ]\r\n    };\r\n    const expandResponse = await callEnoviaWebService(\"POST\", url, body, headers);\r\n    console.log(\"getPrevSeqMCO --1-- \",expandResponse?.output);\r\n    if (expandResponse.status && expandResponse.output) {\r\n      const ItemId = await findPreviousRevisionIdentifier(expandResponse.output, identifier);\r\n      if(ItemId){\r\n        const engItemDetails = await getScopedItms(ItemId, headers);\r\n        if(engItemDetails){\r\n          let EngItemId = engItemDetails.identifier;\r\n          const classAttr = await getAssignedClasses(EngItemId, headers,className);\r\n          const prevSeqMCO = classAttr\r\n            .map((item) => item?.MCOName)\r\n            .filter((name) => name)\r\n            .join(\", \");\r\n          console.log(\"Prev seq MCO is:\", prevSeqMCO);\r\n          if(prevSeqMCO){\r\n          const lastHyphenIndex = prevSeqMCO.lastIndexOf(\"-\");\r\n          const firstHyphenIndex = prevSeqMCO.indexOf(\"-\");\r\n          let CAName = \"\";\r\n          if (lastHyphenIndex !== -1) {\r\n            CAName = prevSeqMCO.substring(firstHyphenIndex+1, lastHyphenIndex);\r\n          } else {\r\n            CAName = prevSeqMCO;\r\n          }\r\n          //const MCODetails = await SearchCA(CAName, headers);\r\n          //console.log(\"MCODetails --475-- \",MCODetails);\r\n          return prevSeqMCO;\r\n          }else{\r\n            return undefined;\r\n          }\r\n        } else {\r\n          console.log(`scope does NOT exist for identifier ${identifier}`);\r\n          return undefined; // Return an empty object if the response is invalid\r\n        }\r\n      } else {\r\n        console.log(`Prev revision does NOT exist for identifier ${identifier}`);\r\n        return undefined; // Return an empty object if the response is invalid\r\n      }\r\n    } else {\r\n      console.log(`No valid response for identifier ${identifier}`);\r\n      return undefined; // Return an empty object if the response is invalid\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching item details for ${identifier}:`, error);\r\n    return undefined; // Return an empty object on error\r\n  }\r\n}\r\n\r\nfunction findNextRevisionIdentifier(data, targetIdentifier) {\r\n  if (!data?.results?.length) return null;\r\n  const versions = data.results[0]?.versions || [];\r\n  // Step 1: Find the current revision\r\n  const currentItem = versions.find(v => v.identifier === targetIdentifier);\r\n  if (!currentItem) return null;\r\n  const currentRevision = currentItem.revision;\r\n  // Step 2: Determine the revision format and compute the next one\r\n  const nextRevision = getNextRevision(currentRevision);\r\n  // Step 3: Find the version with that revision\r\n  const nextItem = versions.find(v => v.revision === nextRevision);\r\n  return nextItem ? nextItem.identifier : null;\r\n}\r\n\r\n// Helper to determine revision format and compute next revision\r\nfunction getNextRevision(revision) {\r\n  // Numeric (e.g. '01', '02', or '1')\r\n  if (/^\\d+$/.test(revision)) {\r\n    const numeric = parseInt(revision, 10) + 1;\r\n    return revision.length > 1\r\n      ? String(numeric).padStart(revision.length, '0') // preserve leading zeroes\r\n      : String(numeric);\r\n  }\r\n  // Alphabetic (e.g. 'AA', 'AB', 'AC', ..., 'AZ', 'BA', etc.)\r\n  if (/^[A-Z]+$/.test(revision)) {\r\n    return incrementAlphaRevision(revision);\r\n  }\r\n  // If format is unknown, return as is\r\n  return revision;\r\n}\r\n\r\n// Increment alphabetic revision like AA → AB, AZ → BA\r\nfunction incrementAlphaRevision(str) {\r\n  let chars = str.split('');\r\n  let i = chars.length - 1;\r\n  while (i >= 0) {\r\n    if (chars[i] === 'Z') {\r\n      chars[i] = 'A';\r\n      i--;\r\n    } else {\r\n      chars[i] = String.fromCharCode(chars[i].charCodeAt(0) + 1);\r\n      return chars.join('');\r\n    }\r\n  }\r\n  // All characters were 'Z', so prepend 'A' (e.g., 'ZZ' → 'AAA')\r\n  return 'A' + chars.join('');\r\n}\r\n\r\n\r\nfunction findPreviousRevisionIdentifier(data, targetIdentifier) {\r\n  if (!data?.results?.length) return null;\r\n  const versions = data.results[0]?.versions || [];\r\n\r\n  // Step 1: Find the current revision\r\n  const currentItem = versions.find(v => v.identifier === targetIdentifier);\r\n  if (!currentItem) return null;\r\n  const currentRevision = currentItem.revision;\r\n\r\n  // Step 2: Determine the revision format and compute the previous one\r\n  const previousRevision = getPreviousRevision(currentRevision);\r\n  if (previousRevision === null) { // Handle the case where there's no previous revision (e.g., 'A' or '01')\r\n    return null;\r\n  }\r\n\r\n  // Step 3: Find the version with that previous revision\r\n  const previousItem = versions.find(v => v.revision === previousRevision);\r\n  return previousItem ? previousItem.identifier : null;\r\n}\r\n\r\n// Helper to determine revision format and compute the previous revision\r\nfunction getPreviousRevision(revision) {\r\n  // Numeric (e.g., '01', '02', or '1')\r\n  if (/^\\d+$/.test(revision)) {\r\n    const numeric = parseInt(revision, 10);\r\n    // If it's the first numeric revision (e.g., '0' or '00', or '1'), there's no previous\r\n    if (numeric <= 1) { // Assuming revisions start at 1 or 01. Adjust if your system starts at 0.\r\n      return null;\r\n    }\r\n    const previousNumeric = numeric - 1;\r\n    // Preserve leading zeroes if original had them\r\n    return revision.length > 1\r\n      ? String(previousNumeric).padStart(revision.length, '0')\r\n      : String(previousNumeric);\r\n  }\r\n\r\n  // Alphabetic (e.g., 'AA', 'AB', 'AC', ..., 'AZ', 'BA', etc.)\r\n  if (/^[A-Z]+$/.test(revision)) {\r\n    return decrementAlphaRevision(revision);\r\n  }\r\n\r\n  // If format is unknown, or if it's the very first revision in that format, return null\r\n  return null;\r\n}\r\n\r\n// Decrement alphabetic revision like AB → AA, BA → AZ\r\nfunction decrementAlphaRevision(str) {\r\n  let chars = str.split('');\r\n  let i = chars.length - 1;\r\n\r\n  while (i >= 0) {\r\n    if (chars[i] === 'A') {\r\n      // If 'A' and it's the first character, we can't decrement further (e.g., 'A')\r\n      if (i === 0) {\r\n        return null; // No previous alphabetic revision (e.g., 'A' has no '0' or prior alpha)\r\n      }\r\n      chars[i] = 'Z'; // Wrap around 'A' to 'Z'\r\n      i--; // Move to the previous character\r\n    } else {\r\n      chars[i] = String.fromCharCode(chars[i].charCodeAt(0) - 1); // Decrement character\r\n      // If all leading characters became 'Z' and it was e.g. 'AAA', it should become 'ZZ'\r\n      // This is handled implicitly by the while loop and join, e.g. 'BA' -> 'AZ' will work if previous was A and wraps.\r\n      return chars.join('');\r\n    }\r\n  }\r\n\r\n  // This part is reached if all characters were 'A' (e.g., \"A\", \"AA\", \"AAA\")\r\n  // and it indicates there's no logical previous alphabetic string in the sequence.\r\n  // The first 'if (i === 0)' check already handles the single 'A' case.\r\n  // For 'AA' -> 'A' this is complex and often not desired in revision systems.\r\n  // Based on the 'incrementAlphaRevision' logic, 'ZZ' goes to 'AAA'.\r\n  // To reverse 'AAA' to 'ZZ', we need to remove the first 'A' and make rest 'Z'\r\n  if (chars.length > 1 && chars[0] === 'A' && chars.every((char, index) => index === 0 || char === 'A')) {\r\n      return 'Z'.repeat(chars.length - 1); // e.g., \"AAA\" -> \"ZZ\"\r\n  }\r\n\r\n  return null; // Should ideally not be reached for standard cases, but as a fallback.\r\n}\r\n\r\nexport const SearchCA = async (flowDownCA, headers) => {\r\n  let CADetails = { CAAtt: [] };\r\n  console.log(\"We are into Search CA Details\");\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n  try {\r\n    // 1st API call to search for the Change Action\r\n    let urlObjWAF = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslc/changeaction/search?$searchStr=name:MCO-*${flowDownCA}`;\r\n    const searchResponse = await callEnoviaWebService(\"GET\", urlObjWAF, \"\", headers);\r\n    const caID = searchResponse.output.changeAction[0]?.identifier;\r\n    console.log(\"Response From 1st Call\", caID);\r\n\r\n    if (caID) {\r\n      // 2nd API call to fetch Change Action details\r\n      const CAUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslc/changeaction/${caID}?$fields=proposedChanges,flowDown`;\r\n      console.log(\"CAUrl --- \"+CAUrl);\r\n      const CAresponse = await callEnoviaWebService(\"GET\", CAUrl, \"\", headers);\r\n      console.log(\"Response From 2nd Call\", CAresponse);\r\n\r\n      if (CAresponse) {\r\n        // Use for...of for async handling in loop\r\n        for (const item of CAresponse.isFlowDownOf || []) {\r\n          if (item.type === \"Change Action\") {\r\n            const parentCAUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslc/changeaction/${item.identifier}?$fields=proposedChanges,flowDown`;\r\n            console.log(\"parentCAUrl --- \"+parentCAUrl);\r\n            try {\r\n              // 3rd API call to fetch Parent Change Action details\r\n              const parentCAResponse = await callEnoviaWebService(\"GET\", parentCAUrl, \"\", headers);\r\n\r\n              console.log(\"Response From 3rd Call\", parentCAResponse);\r\n\r\n              if (parentCAResponse) {\r\n                CADetails.CAAtt.push({\r\n                  CATitle: parentCAResponse.title,\r\n                  CAState: parentCAResponse.state,\r\n                });\r\n              }\r\n            } catch (error) {\r\n              console.error(\"Error fetching parent CA data:\", error);\r\n            }\r\n          }\r\n        }\r\n        CADetails[\"MCOState\"] = CAresponse.state;\r\n        CADetails[\"MCOTitle\"] = CAresponse.title;\r\n      }\r\n    }\r\n    console.log(\"Final CA Details\", CADetails);\r\n    return CADetails;\r\n  } catch (error) {\r\n    console.error(\"Error in SearchCA:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nasync function getClassId(headers, className){\r\n  let classId;\r\n  try{\r\n    const url = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslib/dslib:Library/search?$searchStr=Micro Motion`;\r\n    const response = await callEnoviaWebService(\"GET\", url, \"\", headers);\r\n    console.log(\"Response from getClassId:\", response);\r\n    if (response && response?.output && response?.output?.member) {\r\n      const library = response?.output?.member.find(lib => lib.title === \"Micro Motion\");\r\n      if(library.id){\r\n        const libraryUrl = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslib/dslib:Library/${library.id}?$mask=dslib:ExpandClassesDetailsMask`;\r\n        const libraryResponse = await callEnoviaWebService(\"GET\", libraryUrl, \"\", headers);\r\n        console.log(\"Library Response:\", libraryResponse);\r\n        if(libraryResponse && libraryResponse?.output && libraryResponse?.output?.member) {\r\n          const classItem = libraryResponse?.output?.member[0]?.ChildClasses?.member?.find(cls => cls.title === \"Factories\");\r\n          console.log(\"Class Item:\", classItem);\r\n          console.log(\"classItem.member\", classItem[\"ChildClasses\"]?.member);\r\n          classId = classItem[\"ChildClasses\"]?.member?.find(cls => cls.title === className);\r\n          console.log(\"Class ID:\", classId?.id);\r\n          \r\n        }\r\n      }\r\n    }\r\n    return classId?.id || null; // Return the class ID or null if not found\r\n  }catch (error) {\r\n    console.error(\"Error fetching class ID:\", error);\r\n  }\r\n  //Hit below API to get Micro Motion libray id\r\n  //API - https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslib/dslib:Library/search?$searchStr=Micro Motion\r\n  /*Output - {\r\n    \"totalItems\": 10,\r\n    \"member\": [\r\n        {\r\n            \"id\": \"D66D1C65C18D160065F372A500065407\",\r\n            \"name\": \"Library-OI000186152-00000012\",\r\n            \"title\": \"MMI-Product Family Classification Fields\",\r\n            \"libraryUsage\": \"Definition\"\r\n        },\r\n        {\r\n            \"id\": \"9D54C57FDB68160065F7C6AE0019951F\",\r\n            \"name\": \"Library-OI000186152-00000015\",\r\n            \"title\": \"RTR-ATTRIBUTE-GL\",\r\n            \"libraryUsage\": \"Definition\"\r\n        },\r\n        {\r\n            \"id\": \"B56EF85DED292C0066E35E82000136AD\",\r\n            \"name\": \"Library-OI000186152-00000031\",\r\n            \"title\": \"OLD_Micro Motion\",\r\n            \"libraryUsage\": \"Definition\"\r\n        },\r\n        {\r\n            \"id\": \"9310187EF7511F00674EC9FF000000F1\",\r\n            \"name\": \"Library-OI000186152-00000044\",\r\n            \"title\": \"TEST_KRIS_DEF\",\r\n            \"libraryUsage\": \"Definition\"\r\n        },\r\n        {\r\n            \"id\": \"CF75043CD36B270067EE11320004054D\",\r\n            \"name\": \"Library-OI000186152-00000058\",\r\n            \"title\": \"MSOL-Micro Motion\",\r\n            \"libraryUsage\": \"Definition\"\r\n        },\r\n        {\r\n            \"id\": \"31E73915B5790200680E53A5000008B3\",\r\n            \"name\": \"Library-OI000186152-00000066\",\r\n            \"title\": \"Micro Motion\",\r\n            \"libraryUsage\": \"Standard\"\r\n        },\r\n        {\r\n            \"id\": \"7D56FB4BD96A0D00683FFD5000001443\",\r\n            \"name\": \"Library-OI000186152-00000094\",\r\n            \"title\": \"Supplier Management\",\r\n            \"libraryUsage\": \"Definition\"\r\n        },\r\n        {\r\n            \"id\": \"31E7391517C12A00684A5BA00000149F\",\r\n            \"name\": \"Library-OI000186152-00000096\",\r\n            \"title\": \"ETO Micro Motion Base Models and Medication Type\",\r\n            \"libraryUsage\": \"Standard\"\r\n        },\r\n        {\r\n            \"id\": \"7D56FB4B3C833700684A672400001BE3\",\r\n            \"name\": \"Library-OI000186152-00000101\",\r\n            \"title\": \"ETO Product and Modification Type\",\r\n            \"libraryUsage\": \"Standard\"\r\n        },\r\n        {\r\n            \"id\": \"44F6E01EA5C10C00685CDD3A00006383\",\r\n            \"name\": \"Library-OI000186152-00000121\",\r\n            \"title\": \"Krishna_Test_MM\",\r\n            \"libraryUsage\": \"Standard\"\r\n        }\r\n    ],\r\n    \"nlsLabel\": {\r\n        \"id\": \"Id\",\r\n        \"name\": \"Name\",\r\n        \"title\": \"Title\",\r\n        \"libraryUsage\": \"Purpose\",\r\n        \"classUsage\": \"Purpose\"\r\n    }\r\n}*/\r\n\r\n//get Id of \"Micro Motion\" library & hit below API to get all its classes(Identify desired class from the classes)\r\n//API-https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslib/dslib:Library/31E73915B5790200680E53A5000008B3?$mask=dslib:ExpandClassesDetailsMask\r\n/*Output-{\r\n    \"totalItems\": 1,\r\n    \"member\": [\r\n        {\r\n            \"id\": \"31E73915B5790200680E53A5000008B3\",\r\n            \"name\": \"Library-OI000186152-00000066\",\r\n            \"title\": \"Micro Motion\",\r\n            \"libraryUsage\": \"Standard\",\r\n            \"description\": \"\",\r\n            \"type\": \"General Library\",\r\n            \"modified\": \"6/28/2025 10:15:15 AM\",\r\n            \"created\": \"4/27/2025 3:56:38 PM\",\r\n            \"revision\": \"-\",\r\n            \"state\": \"Active\",\r\n            \"owner\": \"Sudarshan Sambamurthy\",\r\n            \"organization\": \"Company Name\",\r\n            \"collabspace\": \"Micro Motion\",\r\n            \"ChildClasses\": {\r\n                \"totalItems\": 3,\r\n                \"member\": [\r\n                    {\r\n                        \"id\": \"31E73915B5790200680E53F2000008B7\",\r\n                        \"name\": \"Class-OI000186152-00000258\",\r\n                        \"title\": \"Factories\",\r\n                        \"classUsage\": \"Standard\",\r\n                        \"description\": \"\",\r\n                        \"type\": \"General Class\",\r\n                        \"state\": \"Active\",\r\n                        \"modified\": \"6/27/2025 7:27:18 AM\",\r\n                        \"created\": \"4/27/2025 3:57:44 PM\",\r\n                        \"revision\": \"-\",\r\n                        \"owner\": \"Sudarshan Sambamurthy\",\r\n                        \"organization\": \"Company Name\",\r\n                        \"collabspace\": \"Micro Motion\",\r\n                        \"ChildClasses\": {\r\n                            \"totalItems\": 9,\r\n                            \"member\": [\r\n                                {\r\n                                    \"id\": \"31E73915B5790200680E5410000008B9\",\r\n                                    \"name\": \"Class-OI000186152-00000259\",\r\n                                    \"title\": \"MVO\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/3/2025 5:09:43 PM\",\r\n                                    \"created\": \"4/27/2025 3:58:20 PM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"31E73915B5790200680E542B000008BB\",\r\n                                    \"name\": \"Class-OI000186152-00000260\",\r\n                                    \"title\": \"MMB\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/3/2025 2:11:02 PM\",\r\n                                    \"created\": \"4/27/2025 3:58:41 PM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"31E73915B5790200680E5442000008BD\",\r\n                                    \"name\": \"Class-OI000186152-00000261\",\r\n                                    \"title\": \"MMC\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/4/2025 4:49:31 AM\",\r\n                                    \"created\": \"4/27/2025 3:59:04 PM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"31E7391552220C0068369A240000417D\",\r\n                                    \"name\": \"Class-OI000186152-00000412\",\r\n                                    \"title\": \"RTC\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/4/2025 4:49:32 AM\",\r\n                                    \"created\": \"5/28/2025 5:08:08 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"31E7391552220C0068369A4F00004181\",\r\n                                    \"name\": \"Class-OI000186152-00000413\",\r\n                                    \"title\": \"DRM\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/4/2025 4:49:34 AM\",\r\n                                    \"created\": \"5/28/2025 5:08:46 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"31E7391552220C0068369A73000041A7\",\r\n                                    \"name\": \"Class-OI000186152-00000414\",\r\n                                    \"title\": \"CLJ\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/3/2025 7:32:07 AM\",\r\n                                    \"created\": \"5/28/2025 5:09:22 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"31E7391552220C0068369A96000041B5\",\r\n                                    \"name\": \"Class-OI000186152-00000415\",\r\n                                    \"title\": \"EB2\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/1/2025 1:11:05 PM\",\r\n                                    \"created\": \"5/28/2025 5:10:13 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"31E7391552220C0068369AC3000041C3\",\r\n                                    \"name\": \"Class-OI000186152-00000416\",\r\n                                    \"title\": \"JRM\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"6/30/2025 3:32:41 PM\",\r\n                                    \"created\": \"5/28/2025 5:10:38 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"7D56FB4B4DF20E00684936BA00008CF9\",\r\n                                    \"name\": \"Class-OI000186152-00000478\",\r\n                                    \"title\": \"MMP03\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"6/30/2025 3:32:42 PM\",\r\n                                    \"created\": \"6/11/2025 7:57:10 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    {\r\n                        \"id\": \"44F6E01E2F322800685E69990000009F\",\r\n                        \"name\": \"Class-OI000186152-00000677\",\r\n                        \"title\": \"Document Types\",\r\n                        \"classUsage\": \"Standard\",\r\n                        \"description\": \"\",\r\n                        \"type\": \"General Class\",\r\n                        \"state\": \"Active\",\r\n                        \"modified\": \"6/28/2025 10:15:15 AM\",\r\n                        \"created\": \"6/27/2025 9:51:54 AM\",\r\n                        \"revision\": \"-\",\r\n                        \"owner\": \"Sudarshan Sambamurthy\",\r\n                        \"organization\": \"Company Name\",\r\n                        \"collabspace\": \"Micro Motion\",\r\n                        \"ChildClasses\": {\r\n                            \"totalItems\": 2,\r\n                            \"member\": [\r\n                                {\r\n                                    \"id\": \"44F6E01E2F322800685E69D9000002F7\",\r\n                                    \"name\": \"Class-OI000186152-00000678\",\r\n                                    \"title\": \"Engineering Drawing\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/4/2025 6:01:56 AM\",\r\n                                    \"created\": \"6/27/2025 9:52:28 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"44F6E01E7D803100685FC0A100003243\",\r\n                                    \"name\": \"Class-OI000186152-00000679\",\r\n                                    \"title\": \"Approvals Drawing\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/2/2025 8:06:19 AM\",\r\n                                    \"created\": \"6/28/2025 10:15:07 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    {\r\n                        \"id\": \"7D56FB4B3C833700684A61E500001B81\",\r\n                        \"name\": \"Class-OI000186152-00000484\",\r\n                        \"title\": \"Item Types\",\r\n                        \"classUsage\": \"Standard\",\r\n                        \"description\": \"\",\r\n                        \"type\": \"General Class\",\r\n                        \"state\": \"Active\",\r\n                        \"modified\": \"6/26/2025 4:02:00 PM\",\r\n                        \"created\": \"6/12/2025 5:13:38 AM\",\r\n                        \"revision\": \"-\",\r\n                        \"owner\": \"Sudarshan Sambamurthy\",\r\n                        \"organization\": \"Company Name\",\r\n                        \"collabspace\": \"Micro Motion\",\r\n                        \"ChildClasses\": {\r\n                            \"totalItems\": 8,\r\n                            \"member\": [\r\n                                {\r\n                                    \"id\": \"DA9A0FFCCAE63200685A360300013057\",\r\n                                    \"name\": \"Class-OI000186152-00000630\",\r\n                                    \"title\": \"Fastener\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"7/4/2025 2:42:42 AM\",\r\n                                    \"created\": \"6/24/2025 5:22:31 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"44F6E01EA5C10C00685BEB1A00003549\",\r\n                                    \"name\": \"Class-OI000186152-00000644\",\r\n                                    \"title\": \"Transistor / Diode / Varistor\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"6/25/2025 12:35:40 PM\",\r\n                                    \"created\": \"6/25/2025 12:27:37 PM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"3dxserviceuser 3dxserviceuser\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"44F6E01EA5C10C00685BE2A300003091\",\r\n                                    \"name\": \"Class-OI000186152-00000640\",\r\n                                    \"title\": \"Circuit Card\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"6/25/2025 11:59:56 AM\",\r\n                                    \"created\": \"6/25/2025 11:51:59 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"3dxserviceuser 3dxserviceuser\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"44F6E01EA5C10C00685BE4D9000031DD\",\r\n                                    \"name\": \"Class-OI000186152-00000641\",\r\n                                    \"title\": \"Resistor\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"6/25/2025 12:07:43 PM\",\r\n                                    \"created\": \"6/25/2025 12:01:00 PM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"3dxserviceuser 3dxserviceuser\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"44F6E01EA5C10C00685BE6AF00003247\",\r\n                                    \"name\": \"Class-OI000186152-00000642\",\r\n                                    \"title\": \"Pipe\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"6/25/2025 12:14:25 PM\",\r\n                                    \"created\": \"6/25/2025 12:08:30 PM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"3dxserviceuser 3dxserviceuser\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"44F6E01EA5C10C00685BE91200003517\",\r\n                                    \"name\": \"Class-OI000186152-00000643\",\r\n                                    \"title\": \"Other - Mechanical Component\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"6/25/2025 12:26:34 PM\",\r\n                                    \"created\": \"6/25/2025 12:18:45 PM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"3dxserviceuser 3dxserviceuser\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"7D56FB4B3C833700684A624800001B8D\",\r\n                                    \"name\": \"Class-OI000186152-00000485\",\r\n                                    \"title\": \"Capacitor\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Inactive\",\r\n                                    \"modified\": \"6/25/2025 12:44:13 PM\",\r\n                                    \"created\": \"6/12/2025 5:15:05 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"Sudarshan Sambamurthy\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Micro Motion\"\r\n                                },\r\n                                {\r\n                                    \"id\": \"DA9A0FFCCAE63200685A8FE300018C21\",\r\n                                    \"name\": \"Class-OI000186152-00000637\",\r\n                                    \"title\": \"ATO Model\",\r\n                                    \"classUsage\": \"Standard\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"General Class\",\r\n                                    \"state\": \"Active\",\r\n                                    \"modified\": \"6/25/2025 11:44:58 AM\",\r\n                                    \"created\": \"6/24/2025 11:46:15 AM\",\r\n                                    \"revision\": \"-\",\r\n                                    \"owner\": \"3dxserviceuser 3dxserviceuser\",\r\n                                    \"organization\": \"Company Name\",\r\n                                    \"collabspace\": \"Rosemount Measurement\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"nlsLabel\": {\r\n        \"id\": \"Id\",\r\n        \"name\": \"Name\",\r\n        \"title\": \"Title\",\r\n        \"libraryUsage\": \"Purpose\",\r\n        \"classUsage\": \"Purpose\",\r\n        \"description\": \"Description\",\r\n        \"type\": \"Type\",\r\n        \"modified\": \"Modification Date\",\r\n        \"created\": \"Creation Date\",\r\n        \"revision\": \"Revision\",\r\n        \"state\": \"State\",\r\n        \"owner\": \"Owner\"\r\n    }\r\n}*/\r\n//From the above details get & return the ID of class whose name is matching with className(method argument) \r\n//\r\n}\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setDroppedObjectData,\r\n  setInitialDroppedObjectData,\r\n  setPlantObjectData,\r\n} from \"../store/droppedObjectSlice\";\r\nimport {\r\n  setIsDropped as setIsDroppedAction,\r\n  setLoading,\r\n} from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\nimport useMBOMImpactReport from \"./useMBOMImpactReport\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  // fetchCsrfTokenAndDependencies as fetchCsrfService,\r\n  // fetchObjectDetails as fetchObjectDetailsService,\r\n  getDroppedObjectDetails,\r\n  // fetchCardOwnerDetails as fetchCardOwnerDetailsService,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_CSRF_HEADERS_FAILED,\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\n \r\nconst useMBOMImpactReportDropableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { handlePlantAssignment } = useMBOMImpactReport();\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const loading = useSelector((state) => state.droppedObject.loading);\r\n  const dispatch = useDispatch();\r\n \r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n        // const objectDetailsResult = {\r\n        //   success: \"true\",\r\n        //   data: {\r\n        //     cardData: {\r\n        //       \"Title\": \"PRD90100\",\r\n        //       \"Type\": \"Physical Product\",\r\n        //       \"Maturity State\": \"In Work\",\r\n        //       \"Owner\": \"Sudarshan Sambamurthy\",\r\n        //       \"Collaborative Space\": \"Micro Motion\",\r\n        //       \"Collaborative Space Title\": \"MSOL-Micro Motion\",\r\n        //       \"Description\": \"\",\r\n        //       \"Dropped Revision\": \"AA\",\r\n        //       \"Dropped Revision ID\": \"6B8F27BDB2680A0067EE217D00044C1B\",\r\n        //       \"Latest Released Revision\": \"\",\r\n        //       \"Latest Released Revision ID\": \"\",\r\n        //       \"EIN\": \"PRD90100\",\r\n        //       \"CAD Format\": \"\",\r\n        //       \"imageURL\": \"https://oi000186152-us1-space.3dexperience.3ds.com:443/enovia/snresources/images/icons/large/I_VPMNavProduct108x144.png\",\r\n        //       \"relativePath\": \"/resources/v1/modeler/dseng/dseng:EngItem/6B8F27BDB2680A0067EE217D00044C1B\",\r\n        //       \"Name\": \"prd-OI000186152-00090100\",\r\n        //       \"organization\": \"BU-0000001\",\r\n        //       \"Latest Revision\": \"AA\",\r\n        //       \"MFGCA\": false\r\n        //   },\r\n        //   },\r\n        // };\r\n \r\n        // const cardownerResult = await fetchCardOwnerDetailsService({\r\n        //   dataItems,\r\n        //   headers,\r\n        // });\r\n \r\n        if (objectDetailsResult.success) {\r\n          // Merge the data from both services\r\n          // const combineData = {\r\n          //   cardData: objectDetailsResult.data.cardData,\r\n          //   ownerData: cardownerResult.data.ownerData,\r\n          // };\r\n \r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n            })\r\n          );\r\n \r\n          const draggedObjectData = objectDetailsResult.data.cardData;\r\n          console.log(\"[Dragged Items are]\", draggedObjectData);\r\n \r\n          dispatch(setIsDroppedAction(true));\r\n \r\n          // call usePlantAssignment after successfully fetching object details\r\n          if (objectDetailsResult) {\r\n            await handlePlantAssignment(\r\n              draggedObjectData[\"Collaborative Space\"],\r\n              draggedObjectData[\"Maturity State\"],\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              dataItems[0]?.displayName\r\n            );\r\n          }\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        dispatch(setLoading(false));\r\n      }\r\n    },\r\n    [dispatch, handlePlantAssignment]\r\n  );\r\n \r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n \r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          // Validate object type\r\n          const objectType = dataItems[0]?.objectType;\r\n          const validTypes = [\r\n            \"Route\",\r\n            \"Change Action\",\r\n          ]; //\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n            return;\r\n          }\r\n          dispatch(setIsDroppedAction(true));\r\n          // ✅ Ensure we only start loading if another request isn't running\r\n          console.log(\"[handleDrop] 🔄 Force setting `loading = true`...\");\r\n          dispatch(setLoading(false));\r\n          setTimeout(() => dispatch(setLoading(true)), 0);\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        dispatch(setLoading(false)); // ✅ Reset loading in Redux\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n      // finally {\r\n      //   const latestLoadingState = store.getState().droppedObject.loading;\r\n      //   if (latestLoadingState) {\r\n      //     console.log(\"[handleDrop] ✅ Resetting `loading = false`...\");\r\n      //     setLoading(false);\r\n      //   } else {\r\n      //     console.log(\"[handleDrop] ⏳ `loading` is already false. Skipping reset.\");\r\n      //   }\r\n      // }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    // ✅ Only reset isDropped if it's currently false (prevent overwriting a valid drop)\r\n    if (!isDropped) {\r\n      console.log(\r\n        \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n      );\r\n      dispatch(setIsDroppedAction(false)); // ✅ Reset only if necessary\r\n    } else {\r\n      console.log(\r\n        \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n      );\r\n    }\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n \r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n \r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n \r\nexport default useMBOMImpactReportDropableArea;","import React, { useEffect } from \"react\";\r\nimport \"../../components/DragAndDrop/DragAndDrop.css\"; // Import styles for the component\r\nimport { Button, Form, Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../../components/SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\nimport usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRotateLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./MBOMImpactReport.css\";\r\n\r\nconst DragAndDropComponent = ({\r\n  handleFileInputChange,\r\n  fileInputRef,\r\n  isFileInputDisabled,\r\n  handleSubmit,\r\n  isCreateButtonDisabled,\r\n  handleReset,\r\n}) => {\r\n  const { handleDrop } = usePlantDropableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      console.log(\"Selected objects:\", selectedObjects);\r\n      console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"droppable-container mt-4\">\r\n        <Image\r\n          style={{ width: \"90px\", height: \"65px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          // className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        {/* <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div> */}\r\n        {/* <SearchInput onSearch={handleSearch} /> */}\r\n        <div class=\"mt-3\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-6 col-md-auto mb-2\">\r\n              {/* <Button\r\n                variant=\"link ms-auto\"\r\n                onClick={() => {\r\n                  const link = document.createElement(\"a\");\r\n                  link.href =\r\n                    \"https://github.com/aayush825/EMR_PLANT_WIDGET/raw/main/plant_assignment_template.xlsx\"; // Use the raw file URL for direct download\r\n                  link.download = \"plant_assignment_template.xlsx\"; // Set the file name for the download\r\n                  link.click();\r\n                }}\r\n              >\r\n                Download Template\r\n              </Button> */}\r\n            </div>\r\n            <div class=\"col-6 col-md-auto mb-2\">\r\n              {/* <Form.Group controlId=\"formFileMultiple\">\r\n                <Form.Control\r\n                  type=\"file\"\r\n                  multiple\r\n                  onChange={handleFileInputChange}\r\n                  disabled={isFileInputDisabled}\r\n                  ref={fileInputRef} // Attach the ref to the file input\r\n                />\r\n              </Form.Group> */}\r\n            </div>\r\n            {/* <div class=\"col-6 col-md-auto mb-2\">\r\n              <Button variant=\"outline-danger\" onClick={handleReset}>\r\n                <FontAwesomeIcon icon={faRotateLeft} />\r\n              </Button>\r\n            </div> */}\r\n            {/* <div class=\"col-6 col-md-auto mb-2\">\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  cursor: isCreateButtonDisabled ? \"not-allowed\" : \"pointer\", // Apply cursor style to the wrapper div\r\n                }}\r\n              >\r\n                <Button\r\n                  // variant=\"outline-primary\"\r\n                  variant={\r\n                    isCreateButtonDisabled ? \"secondary\" : \"outline-primary\"\r\n                  }\r\n                  onClick={handleSubmit}\r\n                  disabled={isCreateButtonDisabled} // Disable the button\r\n                >\r\n                  Create Manufacturing CA\r\n                </Button>\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useRef,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CardComponent from \"../../components/Card/Card\";\r\nimport { Button, Form, Image } from \"react-bootstrap\";\r\nimport \"./MBOMImpactReport.css\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport MCOImpactReportPartRevTable from \"./MCOImpactReportPartRevTable\";\r\nimport MCOImpactReportMBOMConnectionTable from \"./MCOImpactReportMBOMConnectionTable\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport store from \"../../store\";\r\nimport { refreshWidgetData } from \"../../services/api/refreshService\";\r\n\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nimport {\r\n  setCAItemDetails,\r\n  setCAItemObjectDetails,\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n  setPlantObjectData,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport {\r\n  formattedFinalMessage,\r\n  getCardData,\r\n  getTableData,\r\n  getUniqueTableData,\r\n  processErrorObj,\r\n  tableColumns,\r\n  uniqueColumns,\r\n  tableColumnsMBOMConnections,\r\n  getMBOMConnTableData,\r\n} from \"./dataHelpers\";\r\nimport useToast, { useToastWithProgress } from \"../../hooks/useToast\";\r\n// import { MSG_WIDGET_RESET_SUCCESS } from \"../../utils/toastMessages\";\r\nimport useMBOMImpactReportDropableArea from \"../../hooks/useMBOMImpactReportDropableArea\";\r\nimport {\r\n  handleAddData,\r\n  handleRemoveData,\r\n  saveData,\r\n} from \"../../services/api/PlantAssignment/saveTableDataService\";\r\nimport MBOMImpactReportToolbarNativeCta from \"./MBOMImpactReportToolbarNativeCta\";\r\nimport { MSG_SAVE_FAILURE, MSG_SAVE_SUCCESS } from \"../../utils/toastMessages\";\r\nimport DragAndDropComponent from \"./DragAndDrop\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ContentErrorsModal from \"../../components/Modals/ContentErrorsModal\";\r\nimport { getAllPlants } from \"../../services/api/PlantAssignment/allPlantSevice\";\r\nimport axios from \"axios\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport {\r\n  handleFileChange,\r\n  processManufacturingCA,\r\n} from \"../../services/api/PlantAssignment/createMFGCA\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRotateLeft } from \"@fortawesome/free-solid-svg-icons\"; // This is the reset-style icon\r\nimport { fetchData } from \"../../utils/helpers\";\r\n\r\nconst MBOMImpactReport = () => {\r\n  const { showSuccessToastWithProgress, showErrorToastWithProgress } =\r\n    useToastWithProgress();\r\n  const [isAddingPlant, setIsAddingPlant] = useState(false); // State for loader\r\n  const [validatedData, setValidatedData] = useState(null);\r\n  const [showErrorsModal, setShowErrorsModal] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState([]); // State to store validation errors\r\n  const { initializeDroppableArea, loading } = useMBOMImpactReportDropableArea();\r\n  const [tableKey, setTableKey] = useState(0);\r\n  const [connTableKey, setMBOMConnTableKey] = useState(0);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [connectionTableData, setMBOMConnTableData] = useState([]);\r\n  const [assignedPlant, setAssignedPlant] = useState([]);\r\n  const [selectedFiles, setSelectedFiles] = useState(null);\r\n  const [uniqueData, setUniqueData] = useState([]);\r\n  const [CAItemDetailsTable, setCAItemDetailsTable] = useState([]);\r\n  const [CAItemDetailsTable2, setCAItemDetailsTable2] = useState([]);\r\n  const [isFileInputDisabled, setIsFileInputDisabled] = useState(false); // New state to disable file input\r\n  const [isCreateButtonDisabled, setIsCreateButtonDisabled] = useState(true); // New state to control button enablement\r\n  const { handleDrop } = useMBOMImpactReportDropableArea(); // 🔁 same as WidgetLifecycle\r\n\r\n  // const [addedItem, setAddedItem] = useState([]);\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const [screenLoader, setScreenLoader] = useState(false);\r\n  const [isCardDataAvailable, setIsCardDataAvailable] = useState(false);\r\n  const [isRemoveMode, setIsRemoveMode] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  let securityContext1 = window.widget.getValue(\"Credentials\");\r\n  console.log(\"Security context is: \", securityContext1);\r\n\r\n  const fileInputRef = useRef(null); // Create a ref for the file input\r\n\r\n  const handleFileInputChange =  (event) => {\r\n     handleFileChange(\r\n      event,\r\n      setValidationErrors,\r\n      setShowErrorsModal,\r\n      showErrorToast, // Pass toast functions\r\n      showSuccessToast,\r\n      setValidatedData,\r\n      setSelectedFiles,\r\n      setIsCreateButtonDisabled\r\n    ).finally(() => {\r\n      setScreenLoader(false); // Hide loader after validation is complete\r\n    });\r\n\r\n \r\n\r\n    setIsFileInputDisabled(true);\r\n    // setIsCreateButtonDisabled(false); // Enable the \"Create Manufacturing CA\" button\r\n  };\r\n\r\n  // NEED TO WORK HERE FOR THE UNIQUE PLANTS FOR CA\r\n\r\n  const handleRemovePlant = useCallback(\r\n    (itemId, plantId) => {\r\n      setCAItemDetailsTable((tableData) =>\r\n        tableData.map((item) =>\r\n          item.ItemId === itemId\r\n            ? {\r\n                ...item,\r\n                ItemPlants: item.ItemPlants.map((plant) =>\r\n                  plant.PlantID === plantId\r\n                    ? {\r\n                        ...plant,\r\n                        color: plant.color === \"red\" ? \"green\" : \"red\", // ✅ toggle\r\n                      }\r\n                    : plant\r\n                ),\r\n              }\r\n            : item\r\n        )\r\n      );\r\n    },\r\n    [setCAItemDetailsTable]\r\n  );\r\n\r\n  // Access Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n  console.log(\"droppedObjectData --145--\", droppedObjectData);\r\n\r\n  // Getting the CA dETAILS FROM rEDUX\r\n\r\n  const CAItemDetails = useSelector(\r\n    (state) => state.droppedObject.MCAItemObjectDetails.MCAItemDetails\r\n  );\r\n  console.log(\"The MCA Item Details are:\", CAItemDetails);\r\n\r\n  const CAItemDetails2 = useSelector(\r\n    (state) => state.droppedObject.MCAItemObjectDetails2.MCAItemDetails2\r\n  );\r\n  console.log(\"The MCA Item Details are:\", CAItemDetails2);\r\n\r\n  const loadingParentDetails = useSelector(\r\n    (state) => state.droppedObject.loadingParentDetails\r\n  );\r\n  console.log(\"Parents Loading State:\", loadingParentDetails);\r\n\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n\r\n  // const handleFileInputChange = (event) => {\r\n  //   handleFileChange(event, allPlants, CAHeaders, setValidationErrors, setShowErrorsModal);\r\n  // };\r\n\r\n  const CAData = useSelector(\r\n    (state) => state.droppedObject.plantObjectData.CAData\r\n  );\r\n  console.log(\"The CAData is....:\", CAData);\r\n\r\n  const CAName = useSelector(\r\n    (state) => state.droppedObject.plantObjectData.CAName\r\n  );\r\n  console.log(\"[plant Assignment] CAName:\", CAName);\r\n\r\n  // Trigger re-render of ReusableTable by changing the key\r\n  useEffect(() => {\r\n    if (tableData.length >= 0) {\r\n      setTableKey((prevKey) => prevKey + 1); // Increment the key to trigger a re-render\r\n    }\r\n  }, [tableData]); // Runs whenever tableData changes\r\n\r\n  useEffect(() => {\r\n    if (connectionTableData.length >= 0) {\r\n      setMBOMConnTableKey((prevKey) => prevKey + 1); // Increment the key to trigger a re-render\r\n    }\r\n  }, [connectionTableData]); // Runs whenever tableData changes\r\n  \r\n  if (droppedObjectData.cardData && droppedObjectData.initialDraggedData) {\r\n    var state = droppedObjectData.cardData[\"Maturity State\"];\r\n    var hasMBOM = droppedObjectData.cardData[\"HasMBOM\"];\r\n    var type = droppedObjectData.initialDraggedData?.data?.items[0].objectType;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (type === \"Route\") {\r\n      setCAItemDetailsTable(CAItemDetails);\r\n    } \r\n  }, [ type, CAItemDetails]);\r\n\r\n  useEffect(() => {\r\n    if (type === \"Route\") {\r\n      setCAItemDetailsTable2(CAItemDetails2);\r\n    } \r\n  }, [ type, CAItemDetails2]);\r\n\r\n  // Effect to initialize the droppable area\r\n  useEffect(() => {\r\n    if (!isDropped) {\r\n      initializeDroppableArea();\r\n    }\r\n  }, [isDropped, initializeDroppableArea]);\r\n\r\n  // Effect to set isTableLoading based on loadingParentDetails\r\n  useEffect(() => {\r\n    setIsTableLoading(loadingParentDetails);\r\n  }, [loadingParentDetails]);\r\n\r\n  // Update table data when droppedObjectData changes\r\n  const newTableData = useMemo(() => {\r\n    return type === \"Route\"\r\n      ? getTableData(CAItemDetailsTable, type, CAData)\r\n      : getTableData(assignedPlant, type, CAData);\r\n  }, [CAItemDetailsTable, assignedPlant, type, CAData]);\r\n\r\n  // Update table data when droppedObjectData changes\r\n  const newMBOMConnTableData = useMemo(() => {\r\n    return type === \"Route\"\r\n      ? getMBOMConnTableData(CAItemDetailsTable2, type, CAData)\r\n      : getMBOMConnTableData(assignedPlant, type, CAData);\r\n  }, [CAItemDetailsTable2, assignedPlant, type, CAData]);\r\n\r\n  // Process card data\r\n  const cardData = useMemo(\r\n    () => getCardData(droppedObjectData),\r\n    [droppedObjectData]\r\n  );\r\n  console.log(cardData);\r\n\r\n  // Update table data and reset isTableLoading when newTableData changes\r\n  useEffect(() => {\r\n    if (newTableData.length >= 0) {\r\n      console.log(\"New Table Data:\", newTableData);\r\n      setTableData(newTableData);\r\n      setTableKey((prevKey) => prevKey + 1); // Update table key\r\n    }\r\n  }, [newTableData]);\r\n\r\n  useEffect(() => {\r\n    if (newMBOMConnTableData.length >= 0) {\r\n      console.log(\"New Table Data:\", newMBOMConnTableData);\r\n      setMBOMConnTableData(newMBOMConnTableData);\r\n      setMBOMConnTableKey((prevKey) => prevKey + 1); // Update table key\r\n    }\r\n  }, [newMBOMConnTableData]);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    setIsCardDataAvailable(!!cardData);\r\n  }, [cardData]);\r\n\r\n  // Define columns for the Part rev table\r\n  const columns = useMemo(\r\n    () => tableColumns(CAName, type, isRemoveMode, handleRemovePlant),\r\n    [CAName, type, isRemoveMode, handleRemovePlant]\r\n  );\r\n\r\n  // Define columns for the MBOM Connection table\r\n  const MBOMConnectionColumns = useMemo(\r\n    () => tableColumnsMBOMConnections(CAName, type, isRemoveMode, handleRemovePlant),\r\n    [CAName, type, isRemoveMode, handleRemovePlant]\r\n  );\r\n\r\n  const handleHomeClick = () => {\r\n    initializeDroppableArea(); // Reset the droppable area\r\n    // dispatch(false);\r\n    dispatch(setIsDropped(false));\r\n    dispatch(\r\n      setDroppedObjectData({\r\n        cardData: {},\r\n        parentDetails: [],\r\n        versions: [],\r\n        initialDraggedData: [],\r\n      })\r\n    ); // Clear Redux state\r\n    dispatch(\r\n      setPlantObjectData({\r\n        allPlants: [],\r\n        initialAssignedPlants: [],\r\n        uniquePlants: [],\r\n        productChildren: [],\r\n        CAName: false,\r\n        headers: {},\r\n        proposedChanges: [],\r\n        CAData: {},\r\n      })\r\n    );\r\n    dispatch(\r\n      setCAItemObjectDetails({\r\n        CAItemDetails: [],\r\n        CAallPlants: [],\r\n        CAisMFGCA: false,\r\n        CAheaders: {},\r\n      })\r\n    );\r\n\r\n    setTableData([]); // Clear local table data\r\n    setIsCardDataAvailable(false);\r\n    // showSuccessToast(MSG_WIDGET_RESET_SUCCESS);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"[MBOMImpactReport] State Changes:\", {\r\n      loading,\r\n      loadingParentDetails,\r\n      isDropped,\r\n    });\r\n  }, [loading, loadingParentDetails, isDropped]);\r\n\r\n  const handleReset = () => {\r\n    // Reset all states related to file upload\r\n    setValidatedData(null);\r\n    setSelectedFiles(null);\r\n    setValidationErrors([]);\r\n    setShowErrorsModal(false);\r\n    setTableData([]);\r\n    setUniqueData([]);\r\n    setCAItemDetailsTable([]);\r\n    setCAItemDetailsTable2([]);\r\n    setAssignedPlant([]);\r\n    setTableKey(0);\r\n    setMBOMConnTableKey(0);\r\n\r\n    setIsFileInputDisabled(false);\r\n\r\n    // Clear the file input value using the ref\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = \"\"; // Reset the file input value\r\n    }\r\n\r\n    // Disable the \"Create Manufacturing CA\" button\r\n    setIsCreateButtonDisabled(true);\r\n\r\n    // Optionally show a toast message\r\n    //showSuccessToast(\"File upload has been reset.\");\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validatedData) {\r\n      showErrorToast(\"Please upload and validate a file before proceeding.\");\r\n      return;\r\n    }\r\n\r\n    setScreenLoader(true); // Show loader when the process starts\r\n\r\n    // const CAHeaders = await fetchCsrfToken(); // Fetch headers\r\n    try {\r\n      await processManufacturingCA(\r\n        validatedData,\r\n        showSuccessToastWithProgress,\r\n        showErrorToastWithProgress,\r\n        handleReset\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error in handleSubmit:\", error);\r\n    } finally {\r\n      setScreenLoader(false); // Hide loader after the process is complete\r\n    }\r\n\r\n    // Disable the \"Create Manufacturing CA\" button after submission\r\n    setIsCreateButtonDisabled(true);\r\n  };\r\n\r\n  console.log(\"Before template render :: columns ::\", columns)\r\n  console.log(\"Before template render :: tableData ::\", tableData)\r\n\r\n  return (\r\n    <>\r\n      {screenLoader && <Loader />}\r\n      {/* Show DragAndDropComponent initially and if not loading and nothing is dropped */}\r\n      {!isDropped && !loading && !isTableLoading && (\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <DragAndDropComponent\r\n            handleFileInputChange={handleFileInputChange}\r\n            fileInputRef={fileInputRef}\r\n            isFileInputDisabled={isFileInputDisabled}\r\n            handleSubmit={handleSubmit}\r\n            isCreateButtonDisabled={isCreateButtonDisabled}\r\n            handleReset={handleReset}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Content Wrapper - show if not initially loading or if card data is available */}\r\n      {isDropped && (\r\n        <>\r\n          {/* Show initial loader when loading is true */}\r\n          {loading && <Loader />}\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex \">\r\n              <div className=\" p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {/* Always show card data if available */}\r\n              {cardData && (\r\n                <CardWithDragAndDrop\r\n                  data={cardData}\r\n                  widgetType=\"MBOMImpactReport\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Table Loader - show only when isTableLoading is true */}\r\n          {isTableLoading ? (\r\n            <div className=\"loading-indicator mt-5\">\r\n              {/* <Loader /> */}\r\n            </div>\r\n          ) : (\r\n            <>\r\n            \r\n              <div className=\"wrapper-cta\" style={{ overflowY: 'auto' }}>\r\n              <h3 style={{ marginTop: '16px', marginLeft: '10px' }}>Part Revisions</h3>\r\n              <div className=\"table-container1\" style={{ overflowY: 'auto' }}>\r\n                <MCOImpactReportPartRevTable\r\n                  columns={columns}\r\n                  data={tableData}\r\n                />\r\n                </div>\r\n                \r\n              <h3 style={{ marginTop: '16px', marginLeft: '10px' }}>MBOM Connections</h3>\r\n              <div className=\"table-container1\" style={{ overflowY: 'auto' }}>\r\n                <MCOImpactReportMBOMConnectionTable\r\n                  columns={MBOMConnectionColumns}\r\n                  data={connectionTableData}\r\n                />\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      \r\n      <ContentErrorsModal\r\n        show={showErrorsModal}\r\n        onHide={() => setShowErrorsModal(false)}\r\n        errors={validationErrors}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MBOMImpactReport;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../App.css\";\r\nimport \"../../styles/variables.css\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle\";\r\nimport MBOMImpactReport from \"./MBOMImpactReport\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      {/* <WidgetLifecycle /> */}\r\n      <MBOMImpactReport />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\n// Function to inject the refresh listener script into the **parent window**\r\nfunction injectRefreshListener() {\r\n  // console.log(\"🌍 [index.js] Injecting refresh listener into parent window...\");\r\n\r\n  const scriptContent = `\r\n    function listenForRefreshClicks() {\r\n      // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\r\n\r\n      document.body.addEventListener(\"click\", function (event) {\r\n        let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\r\n\r\n        if (refreshButton) {\r\n          // console.log(\"✅ [Parent] User clicked Refresh!\");\r\n          sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\r\n          // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\r\n        }\r\n      }, true);\r\n    }\r\n\r\n    // ✅ Ensure event listener is added even if DOM is already loaded\r\n    if (document.readyState === \"loading\") {\r\n      document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\r\n    } else {\r\n      listenForRefreshClicks();\r\n    }\r\n  `;\r\n\r\n  // Inject script **into the parent window**\r\n  if (window.parent && window.parent.document) {\r\n    let injectedScript = window.parent.document.createElement(\"script\");\r\n    injectedScript.textContent = scriptContent;\r\n    window.parent.document.body.appendChild(injectedScript);\r\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\r\n  } else {\r\n    console.warn(\"⚠️ [index.js] Unable to inject script—parent window not accessible.\");\r\n  }\r\n}\r\n\r\n// ✅ Inject the script when the React app starts\r\ninjectRefreshListener();\r\n\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n"],"names":["_ref","columns","data","searchText","setSearchText","useState","currentPage","setCurrentPage","columnWidths","setColumnWidths","initialWidths","Array","isArray","forEach","col","accessorKey","defaultWidth","resizingColumnRef","useRef","startXRef","startWidthRef","handleMouseDown","useCallback","e","current","clientX","document","addEventListener","handleMouseMove","handleMouseUp","diff","newWidth","Math","max","prevWidths","_objectSpread","removeEventListener","filteredData","useMemo","filter","row","some","String","toLowerCase","includes","paginatedData","startIndex","slice","totalPages","ceil","length","_jsxs","className","children","_jsx","type","placeholder","value","onChange","target","onClick","handleExport","console","warn","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","blob","Blob","saveAs","map","style","width","header","onMouseDown","idx","colSpan","min","disabled","prev","preventDefault","getTableData","tableData","CAData","log","ItemName","ItemTitle","ItemRev","ItemType","ItemId","ItemSeq","ItemMakeBuy","ItemMBOM","ItemNextSeqMCO","ItemPrevSeqMCO","getMBOMConnTableData","ItemFromName","ItemFromTitle","ItemToName","ItemToTitle","useMBOMImpactReport","showErrorToast","useToast","dispatch","useDispatch","email","window","widget","getValue","handlePlantAssignment","async","collabSpace","state","objectId","routeName","setParentDetailsLoading","headers","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","ItemDetails","ItemDetails2","isMFGCA","CAObjectId","fetchChangeActionData","routeURL","concat","routeResponse","callEnoviaWebService","output","status","id","CAURL","response","changeProcessingPromises","proposedChanges","_expandItemDetails$ex","proposedItemId","change","where","identifier","proposedItemType","MCODetails","mcoName","prevSeqMCO","MCOSeq","split","engItemDetails","getScopedItms","_classAttr$","_classAttr$8","EngItemId","classAttr","getAssignedClasses","_classAttr$2","McoName","PrevSeq","_classAttr$3","_classAttr$4","_classAttr$5","getPreviousSeqRevision","_classAttr$6","_classAttr$7","Seq","entries","entry","trim","matchedEntry","find","parts","firstThree","join","index","indexOf","previousIndex","mcoNamefromPrevSeqValues","url","body","expandResponse","findPreviousRevisionIdentifier","item","MCOName","name","lastHyphenIndex","lastIndexOf","firstHyphenIndex","CAName","substring","error","getPrevAndNextSeqMCO","nextSeqMCO","expandItemDetails","_expandResponse$outpu","expandItmArray","totalSize","totalItems","i","_expandResponse$outpu2","member","jsonObject","title","push","expandItms","iSize","proposedItemTitle","expandItemTitle","z","_expandItemDetails$ex2","_expandItemDetails$ex3","undefined","ItemPlants","Iteminfo","Promise","all","getMfgItemDetails","_ItemPlants$","_ItemPlants$2","_Iteminfo$member$","_Iteminfo$member$$dse","_ItemPlants$3","_ItemPlants$4","ItemState","revision","MBOM","EMR_hasMBOM","ItemERPStatus","PlantERPStatus","err","CAAllPlantsData","allPlants","getAllPlants","setCAAllPlants","setMCAItemDetails","setMCAItemDetails2","setIsMFGCA","userGroupCollab","getUserGroupCollab","allCollabSpaces","plants","fetchAssignedPlants","success","setPlantObjectData","plantData","setHeaders","getProductChildren","fetchProductChildren","setProductChildren","getCaDetails","fetchCADetails","setCAName","setProposedChanges","setCAData","attributeData","classIdFromLibrary","classId","_response$output","_classId2","_response$output2","library","lib","_libraryResponse$outp","libraryUrl","libraryResponse","_libraryResponse$outp2","_libraryResponse$outp3","_libraryResponse$outp4","_libraryResponse$outp5","_classItem$ChildClass","_classItem$ChildClass2","_classItem$ChildClass3","_classId","classItem","ChildClasses","cls","getClassId","itemResponse","_itemResponse$output","_itemResponse$output$","_itemResponse$output$2","ClassificationAttributes","classification","ClassID","sequence","previousSequence","Attributes","attribute","PlantID","ScopeEngItem","targetIdentifier","_data$results2","_data$results$2","results","versions","currentItem","v","previousRevision","test","numeric","parseInt","previousNumeric","padStart","str","chars","fromCharCode","charCodeAt","every","char","repeat","decrementAlphaRevision","getPreviousRevision","previousItem","useMBOMImpactReportDropableArea","isDropped","useSelector","droppedObject","loading","fetchObjectDetails","objectDetailsResult","getDroppedObjectDetails","dataItems","setDroppedObjectData","cardData","draggedObjectData","_dataItems$","_dataItems$2","_dataItems$3","setIsDroppedAction","objectType","displayName","MSG_FETCH_OBJECT_DETAILS_FAILED","setLoading","handleDrop","_dataItems$4","MSG_INVALID_OBJECT_TYPE","setTimeout","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","querySelector","clearInterval","initDroppable","handleFileInputChange","fileInputRef","isFileInputDisabled","handleSubmit","isCreateButtonDisabled","handleReset","usePlantDropableArea","performSearch","useInterComSearch","_Fragment","Image","height","src","alt","class","MBOMImpactReport","showSuccessToastWithProgress","showErrorToastWithProgress","useToastWithProgress","isAddingPlant","setIsAddingPlant","validatedData","setValidatedData","showErrorsModal","setShowErrorsModal","validationErrors","setValidationErrors","tableKey","setTableKey","connTableKey","setMBOMConnTableKey","setTableData","connectionTableData","setMBOMConnTableData","assignedPlant","setAssignedPlant","selectedFiles","setSelectedFiles","uniqueData","setUniqueData","CAItemDetailsTable","setCAItemDetailsTable","CAItemDetailsTable2","setCAItemDetailsTable2","setIsFileInputDisabled","setIsCreateButtonDisabled","isTableLoading","setIsTableLoading","screenLoader","setScreenLoader","isCardDataAvailable","setIsCardDataAvailable","isRemoveMode","setIsRemoveMode","showSuccessToast","securityContext1","handleRemovePlant","itemId","plantId","plant","color","droppedObjectData","CAItemDetails","MCAItemObjectDetails","MCAItemDetails","CAItemDetails2","MCAItemObjectDetails2","MCAItemDetails2","loadingParentDetails","plantObjectData","useEffect","prevKey","initialDraggedData","_droppedObjectData$in","_droppedObjectData$in2","items","newTableData","newMBOMConnTableData","Name","Type","owner","Owner","Description","imageURL","EIN","getCardData","tableColumns","MBOMConnectionColumns","tableColumnsMBOMConnections","Loader","display","flexDirection","justifyContent","position","DragAndDropComponent","event","handleFileChange","finally","processManufacturingCA","handleHomeClick","setIsDropped","parentDetails","initialAssignedPlants","uniquePlants","productChildren","setCAItemObjectDetails","CAallPlants","CAisMFGCA","CAheaders","CardWithDragAndDrop","widgetType","overflowY","marginTop","marginLeft","MCOImpactReportPartRevTable","MCOImpactReportMBOMConnectionTable","ContentErrorsModal","show","onHide","errors","root","hasOnLoadRun","addEvent","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","getElementById","createElement","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","parent","injectedScript","textContent","injectRefreshListener"],"sourceRoot":""}